webpackJsonp([1],[,,,,,,,,,,,,function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=function(){function e(){a(this,e)}return i(e,[{key:"setup",value:function(){this.maps=[],this.textures=[],this.textureCameras=[],this.textureScenes=[],this.planes=[],this.geos=[];for(var e=0;e<6;e++){this.textures[e]=new o.WebGLRenderTarget(1e3,1e3,{minFilter:o.LinearFilter,magFilter:o.LinearFilter,format:o.RGBAFormat}),this.textureCameras[e]=new o.OrthographicCamera(-500,500,500,-500,-100,100),this.textureCameras[e].position.z=10,this.textureScenes[e]=new o.Scene,this.geos[e]=new o.PlaneGeometry(1,1),this.planes[e]=new o.Mesh(this.geos[e],this.mats[e]),this.planes[e].position.z=-10,this.textureScenes[e].add(this.planes[e]),this.maps.push(this.textures[e].texture)}}},{key:"render",value:function(e){for(var t=this,n=e.resolution,a=0;a<6;a++)!function(e){window.renderQueue.addAction(function(){t.textures[e].setSize(n,n),t.textures[e].needsUpdate=!0,t.textureCameras[e].left=-n/2,t.textureCameras[e].right=n/2,t.textureCameras[e].top=n/2,t.textureCameras[e].bottom=-n/2,t.textureCameras[e].updateProjectionMatrix(),t.geos[e]=new o.PlaneGeometry(n,n),t.planes[e].geometry=t.geos[e],window.renderer.render(t.textureScenes[e],t.textureCameras[e],t.textures[e],!0),t.geos[e].dispose()})}(a)}}]),e}();t.a=r},,,function(e,t){e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n"},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports={"aes-128-ecb":{cipher:"AES",key:128,iv:0,mode:"ECB",type:"block"},"aes-192-ecb":{cipher:"AES",key:192,iv:0,mode:"ECB",type:"block"},"aes-256-ecb":{cipher:"AES",key:256,iv:0,mode:"ECB",type:"block"},"aes-128-cbc":{cipher:"AES",key:128,iv:16,mode:"CBC",type:"block"},"aes-192-cbc":{cipher:"AES",key:192,iv:16,mode:"CBC",type:"block"},"aes-256-cbc":{cipher:"AES",key:256,iv:16,mode:"CBC",type:"block"},aes128:{cipher:"AES",key:128,iv:16,mode:"CBC",type:"block"},aes192:{cipher:"AES",key:192,iv:16,mode:"CBC",type:"block"},aes256:{cipher:"AES",key:256,iv:16,mode:"CBC",type:"block"},"aes-128-cfb":{cipher:"AES",key:128,iv:16,mode:"CFB",type:"stream"},"aes-192-cfb":{cipher:"AES",key:192,iv:16,mode:"CFB",type:"stream"},"aes-256-cfb":{cipher:"AES",key:256,iv:16,mode:"CFB",type:"stream"},"aes-128-cfb8":{cipher:"AES",key:128,iv:16,mode:"CFB8",type:"stream"},"aes-192-cfb8":{cipher:"AES",key:192,iv:16,mode:"CFB8",type:"stream"},"aes-256-cfb8":{cipher:"AES",key:256,iv:16,mode:"CFB8",type:"stream"},"aes-128-cfb1":{cipher:"AES",key:128,iv:16,mode:"CFB1",type:"stream"},"aes-192-cfb1":{cipher:"AES",key:192,iv:16,mode:"CFB1",type:"stream"},"aes-256-cfb1":{cipher:"AES",key:256,iv:16,mode:"CFB1",type:"stream"},"aes-128-ofb":{cipher:"AES",key:128,iv:16,mode:"OFB",type:"stream"},"aes-192-ofb":{cipher:"AES",key:192,iv:16,mode:"OFB",type:"stream"},"aes-256-ofb":{cipher:"AES",key:256,iv:16,mode:"OFB",type:"stream"},"aes-128-ctr":{cipher:"AES",key:128,iv:16,mode:"CTR",type:"stream"},"aes-192-ctr":{cipher:"AES",key:192,iv:16,mode:"CTR",type:"stream"},"aes-256-ctr":{cipher:"AES",key:256,iv:16,mode:"CTR",type:"stream"},"aes-128-gcm":{cipher:"AES",key:128,iv:12,mode:"GCM",type:"auth"},"aes-192-gcm":{cipher:"AES",key:192,iv:12,mode:"GCM",type:"auth"},"aes-256-gcm":{cipher:"AES",key:256,iv:12,mode:"GCM",type:"auth"}}},function(e,t){e.exports={sha224WithRSAEncryption:{sign:"rsa",hash:"sha224",id:"302d300d06096086480165030402040500041c"},"RSA-SHA224":{sign:"ecdsa/rsa",hash:"sha224",id:"302d300d06096086480165030402040500041c"},sha256WithRSAEncryption:{sign:"rsa",hash:"sha256",id:"3031300d060960864801650304020105000420"},"RSA-SHA256":{sign:"ecdsa/rsa",hash:"sha256",id:"3031300d060960864801650304020105000420"},sha384WithRSAEncryption:{sign:"rsa",hash:"sha384",id:"3041300d060960864801650304020205000430"},"RSA-SHA384":{sign:"ecdsa/rsa",hash:"sha384",id:"3041300d060960864801650304020205000430"},sha512WithRSAEncryption:{sign:"rsa",hash:"sha512",id:"3051300d060960864801650304020305000440"},"RSA-SHA512":{sign:"ecdsa/rsa",hash:"sha512",id:"3051300d060960864801650304020305000440"},"RSA-SHA1":{sign:"rsa",hash:"sha1",id:"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{sign:"ecdsa",hash:"sha1",id:""},sha256:{sign:"ecdsa",hash:"sha256",id:""},sha224:{sign:"ecdsa",hash:"sha224",id:""},sha384:{sign:"ecdsa",hash:"sha384",id:""},sha512:{sign:"ecdsa",hash:"sha512",id:""},"DSA-SHA":{sign:"dsa",hash:"sha1",id:""},"DSA-SHA1":{sign:"dsa",hash:"sha1",id:""},DSA:{sign:"dsa",hash:"sha1",id:""},"DSA-WITH-SHA224":{sign:"dsa",hash:"sha224",id:""},"DSA-SHA224":{sign:"dsa",hash:"sha224",id:""},"DSA-WITH-SHA256":{sign:"dsa",hash:"sha256",id:""},"DSA-SHA256":{sign:"dsa",hash:"sha256",id:""},"DSA-WITH-SHA384":{sign:"dsa",hash:"sha384",id:""},"DSA-SHA384":{sign:"dsa",hash:"sha384",id:""},"DSA-WITH-SHA512":{sign:"dsa",hash:"sha512",id:""},"DSA-SHA512":{sign:"dsa",hash:"sha512",id:""},"DSA-RIPEMD160":{sign:"dsa",hash:"rmd160",id:""},ripemd160WithRSA:{sign:"rsa",hash:"rmd160",id:"3021300906052b2403020105000414"},"RSA-RIPEMD160":{sign:"rsa",hash:"rmd160",id:"3021300906052b2403020105000414"},md5WithRSAEncryption:{sign:"rsa",hash:"md5",id:"3020300c06082a864886f70d020505000410"},"RSA-MD5":{sign:"rsa",hash:"md5",id:"3020300c06082a864886f70d020505000410"}}},function(e,t){e.exports={"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}},,,,,,,,,,,,,,,,,,function(e,t){e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float resolution;\nuniform float waterLevel;\nuniform sampler2D heightMap;\nuniform sampler2D textureMap;\n\nfloat getBrightness(vec4 color) {\n\tfloat bright = 1.0 - (0.2126*color.r + 0.7152*color.g + 0.0722*color.b);\n\t// if (bright > 0.6) {\n\t// \tbright *= 0.3;\n\t// }\n\treturn bright;\n}\n\nvoid main() {\n\n\tfloat x = vUv.x;\n\tfloat y = vUv.y;\n\t// float x = gl_FragCoord.x / 1024.0;\n\t// float y = gl_FragCoord.y / 1024.0;\n\tfloat pixelSize = 1.0 / resolution;\n\n\n\t// Value from trial & error.\n  // Seems to work fine for the scales we are dealing with.\n  // float strength = scale.Y / 16;\n  float strength = 0.8;\n\n\n\tfloat level = texture2D(heightMap, vec2(x, y)).r;\n\tfloat water = waterLevel;\n\t// float mod = 1.0;\n\t// if (level < water) {\n\t// \tmod = 0.1;\n\t// }\n\n\n\n  float tl = getBrightness(texture2D(textureMap, vec2(x-pixelSize, y-pixelSize)));\n  float l = getBrightness(texture2D(textureMap, vec2(x-pixelSize, y)));\n  float bl = getBrightness(texture2D(textureMap, vec2(x-pixelSize, y+pixelSize)));\n  float b = getBrightness(texture2D(textureMap, vec2(x, y+pixelSize)));\n  float br = getBrightness(texture2D(textureMap, vec2(x+pixelSize, y+pixelSize)));\n  float r = getBrightness(texture2D(textureMap, vec2(x+pixelSize, y)));\n  float tr = getBrightness(texture2D(textureMap, vec2(x+pixelSize, y-pixelSize)));\n  float t = getBrightness(texture2D(textureMap, vec2(x, y-pixelSize)));\n\n\n\tfloat tl2 = getBrightness(texture2D(heightMap, vec2(x-pixelSize, y-pixelSize)));\n  float l2 = getBrightness(texture2D(heightMap, vec2(x-pixelSize, y)));\n  float bl2 = getBrightness(texture2D(heightMap, vec2(x-pixelSize, y+pixelSize)));\n  float b2 = getBrightness(texture2D(heightMap, vec2(x, y+pixelSize)));\n  float br2 = getBrightness(texture2D(heightMap, vec2(x+pixelSize, y+pixelSize)));\n  float r2 = getBrightness(texture2D(heightMap, vec2(x+pixelSize, y)));\n  float tr2 = getBrightness(texture2D(heightMap, vec2(x+pixelSize, y-pixelSize)));\n  float t2 = getBrightness(texture2D(heightMap, vec2(x, y-pixelSize)));\n\n\tfloat ratio = 1.0;\n\n\tif (level > water) {\n\t\tfloat diff = water - level;\n\t\tratio = 1.0 - (diff*1.0);\n\t}\n\n\ttl = mix(tl, tl2, ratio);\n\tl = mix(l, l2, ratio);\n\tbl = mix(bl, bl2, ratio);\n\tb = mix(b, b2, ratio);\n\tbr = mix(br, br2, ratio);\n\tr = mix(r, r2, ratio);\n\ttr = mix(tr, tr2, ratio);\n\tt = mix(t, t2, ratio);\n\n\t// float level = getBrightness(texture2D(heightMap, vec2(x, y)));\n\n\n\t// smooth out the normal map for the water\n\tfloat factor = 0.01;\n\tfloat depth = 0.5;\n\tif (level < water) {\n\t\t// strength = 0.00;\n\t\ttl = mix(depth, tl, factor);\n\t\tl = mix(depth, l, factor);\n\t\tbl = mix(depth, bl, factor);\n\t\tb = mix(depth, b, factor);\n\t\tbr = mix(depth, br, factor);\n\t\tr = mix(depth, r, factor);\n\t\ttr = mix(depth, tr, factor);\n\t\tt = mix(depth, t, factor);\n\t}\n\n\n  // Compute dx using Sobel:\n  //           -1 0 1\n  //           -2 0 2\n  //           -1 0 1\n  float dX = tr + 2.0 * r + br - tl - 2.0 * l - bl;\n\n  // Compute dy using Sobel:\n  //           -1 -2 -1\n  //            0  0  0\n  //            1  2  1\n  float dY = bl + 2.0 * b + br - tl - 2.0 * t - tr;\n\n\n  vec3 N = vec3(dX, dY, 1.0 / strength);\n\n  //\n\t// if (level < 0.5) {\n\t// \tN.x = 0.5;\n\t// \tN.y = 0.5;\n\t// \tN.z = -0.5;\n  //\n\t// }\n\n\tnormalize(N);\n\n  //convert (-1.0 , 1.0) to (0.0 , 1.0), if necessary\n  //Vector3 scale = new Vector3(0.5f, 0.5f, 0.5f);\n  //Vector3.Multiply(ref N, ref scale, out N);\n  //Vector3.Add(ref N, ref scale, out N);\n\n\tN = N * 0.5 + 0.5;\n\n\n  gl_FragColor = vec4(N, 1.0);\n}\n"},function(e,t){e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n"},function(e,t){e.exports="#define GLSLIFY 1\nvarying vec2 vUv;\nuniform float resolution;\nuniform sampler2D heightMap;\nuniform float waterLevel;\n\nfloat getBrightness(vec4 color) {\n\treturn 1.0 - (0.2126*color.r + 0.7152*color.g + 0.0722*color.b);\n}\n\nvoid main() {\n\n\tfloat x = vUv.x;\n\tfloat y = vUv.y;\n\n\tfloat pixelSize = 1.0 / resolution;\n\n\tfloat n = texture2D(heightMap, vec2(x, y)).r;\n\tfloat roughness = 0.0;\n\n\tif (n < waterLevel) {\n\t\troughness = 0.75;\n\t} else {\n\t\troughness = 0.9;\n\t}\n\n  gl_FragColor = vec4(vec3(roughness), 1.0);\n}\n"},function(e,t){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 4D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-08-22\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289_1_0(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_1_1(vec4 x)\n{\n  return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt_1_2(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 fade_1_3(vec4 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise_1_4(vec4 P)\n{\n  vec4 Pi0 = floor(P); // Integer part for indexing\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n  Pi0 = mod289_1_0(Pi0);\n  Pi1 = mod289_1_0(Pi1);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\n  vec4 ixy0 = permute_1_1(ixy + iz0);\n  vec4 ixy1 = permute_1_1(ixy + iz1);\n  vec4 ixy00 = permute_1_1(ixy0 + iw0);\n  vec4 ixy01 = permute_1_1(ixy0 + iw1);\n  vec4 ixy10 = permute_1_1(ixy1 + iw0);\n  vec4 ixy11 = permute_1_1(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 * (1.0 / 7.0);\n  vec4 gy00 = floor(gx00) * (1.0 / 7.0);\n  vec4 gz00 = floor(gy00) * (1.0 / 6.0);\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 * (1.0 / 7.0);\n  vec4 gy01 = floor(gx01) * (1.0 / 7.0);\n  vec4 gz01 = floor(gy01) * (1.0 / 6.0);\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 * (1.0 / 7.0);\n  vec4 gy10 = floor(gx10) * (1.0 / 7.0);\n  vec4 gz10 = floor(gy10) * (1.0 / 6.0);\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 * (1.0 / 7.0);\n  vec4 gy11 = floor(gx11) * (1.0 / 7.0);\n  vec4 gz11 = floor(gy11) * (1.0 / 6.0);\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt_1_2(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt_1_2(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt_1_2(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt_1_2(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade_1_3(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\n\n\n\nvarying vec2 vUv;\n\nuniform sampler2D biomeMap;\nuniform sampler2D heightMap;\nuniform sampler2D moistureMap;\n\nvoid main() {\n\tfloat x = vUv.x;\n\tfloat y = vUv.y;\n\n\tfloat n1 = texture2D(heightMap, vec2(x, y)).r;\n\tfloat n2 = texture2D(moistureMap, vec2(x, y)).r;\n\n\tvec4 color = texture2D(biomeMap, vec2(n2, n1));\n\n\t// if (n1 < 0.5) {\n\t// \tvec4 water = vec4(0.0, 0.4, 0.9, 1.0);\n\t// \t// vec4 water = vec4(1.0, 0.2, 0.0, 1.0);\n\t// \tcolor = mix(water, color, 0.3);\n\t// }\n  //\n\t// if (n1 < 0.5 && n1 > 0.4) {\n\t// \tvec4 coast = vec4(vec3(1.0), 1.0);\n\t// \tfloat amount = 1.0 - ((0.5 - n1) * 10.0);\n\t// \tcolor = mix(color, coast, amount*0.3);\n\t// }\n\n\t// color = vec4(1.0);\n\n\tgl_FragColor = color;\n}\n'},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=(n(3),n(90)),s=n(228),c=(n.n(s),n(227)),l=(n.n(c),n(103)),d=n(104),f=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),h=function e(t,n,a){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,a)}if("value"in o)return o.value;var r=o.get;if(void 0!==r)return r.call(a)},u=function(e){function t(){a(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return window.renderQueue=new d.a,e.planet=new l.a,e.scene.add(e.planet.view),e.animate(),e}return i(t,e),f(t,[{key:"saveScreenshot",value:function(){this.shouldCaptureScreenshot=!0}},{key:"takeScreenshot",value:function(){window.open(this.renderer.domElement.toDataURL("image/png"),"screenshot")}},{key:"animate",value:function(){window.renderQueue.update(),this.planet.update(),h(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"animate",this).call(this)}}]),t}(r.a);t.a=u},function(e,t,n){var a=n(111);"string"==typeof a&&(a=[[e.i,a,""]]);var o={};o.transform=void 0;n(235)(a,o);a.locals&&(e.exports=a.locals)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(88);n.n(a);new(n(87).a)},function(e,t,n){"use strict";(function(e){function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=(n(3),n(217)),i=(n.n(o),n(218)),r=(n.n(i),n(143)),s=n.n(r),c=n(208),l=n.n(c),d=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),f=function(){function t(){var n=this;a(this,t),this._camera=new e.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,1e5),this._camera.position.z=2700,window.camera=this._camera,this._scene=new e.Scene,this._renderer=new e.WebGLRenderer({antialias:!1,alpha:!0}),this._renderer.setPixelRatio(window.devicePixelRatio),this._renderer.sortObjects=!1,this._renderer.setSize(window.innerWidth,window.innerHeight),window.renderer=this._renderer,document.body.appendChild(this._renderer.domElement),this.ambientLight=new e.AmbientLight(16777215,.3),this._scene.add(this.ambientLight),this.directionalLight=new e.DirectionalLight(16777215,1.6),this.directionalLight.position.set(-1,1,1),this._scene.add(this.directionalLight),window.light=this.directionalLight,this._controls=new e.OrbitControls(this._camera,this._renderer.domElement),this._controls.enableDamping=!0,this._controls.dampingFactor=.1,this._controls.rotateSpeed=.1,this._controls.autoRotate=!1,this._controls.autoRotateSpeed=.01,this._controls.zoomSpeed=.1,window.gui=new s.a.GUI;var o=gui.addFolder("Lighting");this.sunColor={r:255,g:255,b:255},this.dirLightControl=o.addColor(this,"sunColor").onChange(function(e){n.directionalLight.color.r=n.sunColor.r/255,n.directionalLight.color.g=n.sunColor.g/255,n.directionalLight.color.b=n.sunColor.b/255}),o.add(this.directionalLight,"intensity",0,3),this.ambientColor={r:255,g:255,b:255},this.ambientControl=o.addColor(this,"ambientColor").onChange(function(e){n.ambientLight.color.r=n.ambientColor.r/255,n.ambientLight.color.g=n.ambientColor.g/255,n.ambientLight.color.b=n.ambientColor.b/255}),o.add(this.ambientLight,"intensity",0,2);var i=gui.addFolder("Camera");i.add(this._controls,"autoRotate"),this.fovControl=i.add(this._camera,"fov",20,120),this.fovControl.onChange(function(e){n._camera.updateProjectionMatrix()}),this.stats=new l.a,this.stats.setMode(0),this.stats.domElement.style.position="absolute",this.stats.domElement.style.left="10px",this.stats.domElement.style.top="0px",window.addEventListener("resize",this.onWindowResize.bind(this),!1)}return d(t,[{key:"onWindowResize",value:function(){this._camera.aspect=window.innerWidth/window.innerHeight,this._camera.updateProjectionMatrix(),this._renderer.setSize(window.innerWidth,window.innerHeight)}},{key:"animate",value:function(e){this.stats.begin(),requestAnimationFrame(this.animate.bind(this)),this._controls.update(),this._renderer.render(this._scene,this._camera),this.stats.end()}},{key:"renderer",get:function(){return this._renderer}},{key:"camera",get:function(){return this._camera}},{key:"scene",get:function(){return this._scene}}]),t}();t.a=f}).call(t,n(3))},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=n(233),r=n.n(i),s=n(223),c=n.n(s),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),d=function(){function e(){a(this,e),this.view=new o.Object3D,this.time=0,this.atmo1=.5,this.atmo2=.5,this.atmo3=1,this.atmo4=.5,this.atmo5=.1,this.color=new o.Color(65535),this.size=1002,this.atmosphere=.3,this.mat=new o.ShaderMaterial({vertexShader:r.a,fragmentShader:c.a,uniforms:{time:{type:"f",value:this.time},atmo1:{type:"f",value:this.atmo1},atmo2:{type:"f",value:this.atmo2},atmo3:{type:"f",value:this.atmo3},atmo4:{type:"f",value:this.atmo4},atmo5:{type:"f",value:this.atmo5},alpha:{type:"f",value:this.atmosphere},color:{type:"c",value:this.color}}}),this.mat.transparent=!0,this.mat.blending=o.AdditiveBlending,this.geo=new o.IcosahedronBufferGeometry(1,6),this.sphere=new o.Mesh(this.geo,this.mat),this.sphere.scale.set(this.size,this.size,this.size),this.view.add(this.sphere)}return l(e,[{key:"update",value:function(){this.time+=this.speed,this.mat.uniforms.time.value=this.time,this.mat.uniforms.atmo1.value=this.atmo1,this.mat.uniforms.atmo2.value=this.atmo2,this.mat.uniforms.atmo3.value=this.atmo3,this.mat.uniforms.atmo4.value=this.atmo4,this.mat.uniforms.atmo5.value=this.atmo5,this.mat.uniforms.alpha.value=this.atmosphere,this.mat.uniforms.color.value=this.color}},{key:"randomize",value:function(){this.randomizeColor()}},{key:"randomizeColor",value:function(){this.color=new o.Color,this.color.r=this.randRange(.5,1),this.color.g=this.randRange(.5,1),this.color.b=this.randRange(.5,1),this.mat.uniforms.color.value=this.color}},{key:"randRange",value:function(e,t){var n=t-e;return e+window.rng()*n}}]),e}();t.a=d},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=n(225),r=n.n(i),s=n(224),c=n.n(s),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();!function(){function e(){a(this,e),this.view=new o.Object3D,this.size=1030,this.clock=new o.Clock,this.atmosphere={Kr:.0025,Km:.001,ESun:20,g:-.95,innerRadius:1e3,outerRadius:this.size,wavelength:[.65,.57,.475],scaleDepth:.25,mieScaleDepth:.5};var t=new o.Vector4(0,0,0,1);this.atmosphereUniforms={v3LightPosition:{type:"v3",value:new o.Vector3(-1,1,1)},v3InvWavelength:{type:"v3",value:new o.Vector3(1/Math.pow(this.atmosphere.wavelength[0],4),1/Math.pow(this.atmosphere.wavelength[1],4),1/Math.pow(this.atmosphere.wavelength[2],4))},fCameraHeight:{type:"f",value:0},fCameraHeight2:{type:"f",value:0},fInnerRadius:{type:"f",value:this.atmosphere.innerRadius},fInnerRadius2:{type:"f",value:this.atmosphere.innerRadius*this.atmosphere.innerRadius},fOuterRadius:{type:"f",value:this.atmosphere.outerRadius},fOuterRadius2:{type:"f",value:this.atmosphere.outerRadius*this.atmosphere.outerRadius},fKrESun:{type:"f",value:this.atmosphere.Kr*this.atmosphere.ESun},fKmESun:{type:"f",value:this.atmosphere.Km*this.atmosphere.ESun},fKr4PI:{type:"f",value:4*this.atmosphere.Kr*Math.PI},fKm4PI:{type:"f",value:4*this.atmosphere.Km*Math.PI},fScale:{type:"f",value:1/(this.atmosphere.outerRadius-this.atmosphere.innerRadius)},fScaleDepth:{type:"f",value:this.atmosphere.scaleDepth},fScaleOverScaleDepth:{type:"f",value:1/(this.atmosphere.outerRadius-this.atmosphere.innerRadius)/this.atmosphere.scaleDepth},g:{type:"f",value:this.atmosphere.g},g2:{type:"f",value:this.atmosphere.g*this.atmosphere.g},nSamples:{type:"i",value:3},fSamples:{type:"f",value:3},atmosphereColor:{type:"v3",value:t},tDisplacement:{type:"t",value:0},tSkyboxDiffuse:{type:"t",value:0},fNightScale:{type:"f",value:1},level:{type:"f",value:window.camera.position.length()}},this.mat=new o.ShaderMaterial({uniforms:this.atmosphereUniforms,vertexShader:r.a,fragmentShader:c.a,transparent:!0,side:o.BackSide}),this.geo=new o.IcosahedronGeometry(this.size,6),this.sphere=new o.Mesh(this.geo,this.mat),this.view.add(this.sphere)}l(e,[{key:"update",value:function(){this.updateUniforms()}},{key:"updateUniforms",value:function(){var e=new o.Vector3(.72,.27,.35),t=window.camera.position.length();this.atmosphereUniforms.fCameraHeight.value=t,this.atmosphereUniforms.fCameraHeight2.value=t*t,this.atmosphereUniforms.v3InvWavelength.value=new o.Vector3(1/Math.pow(e.x,4),1/Math.pow(e.y,4),1/Math.pow(e.z,4)),this.atmosphereUniforms.level.value=window.camera.position.distanceTo(new o.Vector3(0,0,0))}}])}()},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=function(){function e(){a(this,e),this.canvas=document.createElement("canvas"),this.canvas.id="biomeCanvas",this.canvas.width=512,this.canvas.height=512,this.canvas.style.width="200px",this.canvas.style.height="200px",this.width=this.canvas.width,this.height=this.canvas.height,this.ctx=this.canvas.getContext("2d"),document.body.appendChild(this.canvas),this.toggleCanvasDisplay(!1)}return i(e,[{key:"generateTexture",value:function(e){this.waterLevel=e.waterLevel;var t=this.randRange(0,1),n=this.randRange(0,.5),a=this.randRange(.2,.5);this.baseColor=(new o.Color).setHSL(t,n,a),this.colorAngle=this.randRange(0,.5),this.satRange=this.randRange(.3,.5),this.lightRange=this.randRange(.3,.5),this.circleSize=this.randRange(30,300),this.drawBase();var i=Math.round(this.randRange(50,100));i=100;for(var r=0;r<i;r++)this.randomGradientCircle();this.drawDetail(),this.drawInland(),this.drawBeach(),this.drawWater(),this.texture=new o.CanvasTexture(this.canvas)}},{key:"toggleCanvasDisplay",value:function(e){this.canvas.style.display=e?"block":"none"}},{key:"drawBase",value:function(){this.fillBaseColor();for(var e=0;e<5;e++){var t=this.width,n=this.height;this.randomGradientRect(0,0,t,n)}}},{key:"drawDetail",value:function(){for(var e=Math.round(this.randRange(0,5)),t=0;t<e;t++){var n=this.randRange(0,this.width),a=this.randRange(0,this.height),o=this.randRange(0,this.width),i=this.randRange(0,this.height),r=o-n,s=i-a;this.randomGradientStrip(n,a,r,s)}}},{key:"drawRivers",value:function(){var e=this.randomColor();this.ctx.strokeStyle="rgba("+e.r+", "+e.g+", "+e.b+", 0.5)";for(var t=this.randRange(0,this.width),n=this.randRange(0,this.height),a=t,o=n,i=0;i<5;i++)t=this.randRange(0,this.width),n=this.randRange(0,this.height),this.ctx.moveTo(a,o),this.ctx.lineTo(t,n),this.ctx.stroke(),a=t,o=n}},{key:"randomCircle",value:function(){var e=this.randRange(0,this.width),t=this.randRange(0,this.height),n=this.randRange(0,10),a=this.randomColor();this.ctx.fillStyle="rgba("+a.r+", "+a.g+", "+a.b+", 0.5)",this.ctx.beginPath(),this.ctx.arc(e,t,n,0,2*Math.PI),this.ctx.fill()}},{key:"randomGradientStrip",value:function(e,t,n,a){var o=this.randRange(0,this.width),i=this.randRange(0,this.height),r=this.randRange(0,this.width),s=this.randRange(0,this.height),c=this.ctx.createLinearGradient(o,i,r,s),l=this.randomColor();c.addColorStop(this.randRange(0,.5),"rgba("+l.r+", "+l.g+", "+l.b+", 0.0)"),c.addColorStop(.5,"rgba("+l.r+", "+l.g+", "+l.b+", 0.8)"),c.addColorStop(this.randRange(.5,1),"rgba("+l.r+", "+l.g+", "+l.b+", 0.0)"),this.ctx.fillStyle=c,this.ctx.fillRect(e,t,n,a)}},{key:"blackWhiteGradient",value:function(){var e=this.width,t=this.height,n=this.ctx.createLinearGradient(0,0,e,t);n.addColorStop(0,"rgba(255, 255, 255, 1.0)"),n.addColorStop(1,"rgba(0, 0, 0, 1.0)"),this.ctx.fillStyle=n,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"fillBaseColor",value:function(){this.ctx.fillStyle=this.toCanvasColor(this.baseColor),this.ctx.fillRect(0,0,this.width,this.height)}},{key:"randomGradientRect",value:function(e,t,n,a){var o=this.randRange(0,this.width),i=this.randRange(0,this.height),r=this.randRange(0,this.width),s=this.randRange(0,this.height),c=this.ctx.createLinearGradient(o,i,r,s),l=this.randomColor();c.addColorStop(0,"rgba("+l.r+", "+l.g+", "+l.b+", 0.0)"),c.addColorStop(1,"rgba("+l.r+", "+l.g+", "+l.b+", 1.0)"),this.ctx.fillStyle=c,this.ctx.fillRect(e,t,n,a)}},{key:"drawWater",value:function(){var e=this.height-this.height*this.waterLevel,t=this.height,n=this.ctx.createLinearGradient(0,e,0,t),a=this.randomWaterColor();n.addColorStop(0,"rgba("+Math.round(1.3*a.r)+", "+Math.round(1.3*a.g)+", "+Math.round(1.3*a.b)+", 0.9)"),n.addColorStop(.2,"rgba("+Math.round(1*a.r)+", "+Math.round(1*a.g)+", "+Math.round(1*a.b)+", 0.9)"),n.addColorStop(.8,"rgba("+Math.round(.7*a.r)+", "+Math.round(.7*a.g)+", "+Math.round(.7*a.b)+", 0.9)"),this.ctx.fillStyle=n,this.ctx.fillRect(0,e,this.width,this.height)}},{key:"drawBeach",value:function(){this.beachSize=7;var e=this.height-this.height*this.waterLevel-this.beachSize,t=this.height-this.height*this.waterLevel,n=this.ctx.createLinearGradient(0,e,0,t),a=this.randomColor();n.addColorStop(0,"rgba("+Math.round(1*a.r)+", "+Math.round(1*a.g)+", "+Math.round(1*a.b)+", 0)"),n.addColorStop(1,"rgba("+Math.round(1*a.r)+", "+Math.round(1*a.g)+", "+Math.round(1*a.b)+", 0.3)"),this.ctx.fillStyle=n,this.ctx.fillRect(0,e,this.width,this.beachSize)}},{key:"drawInland",value:function(){this.inlandSize=100;var e=this.height-this.height*this.waterLevel-this.inlandSize,t=this.height-this.height*this.waterLevel,n=this.ctx.createLinearGradient(0,e,0,t),a=this.randomColor();n.addColorStop(0,"rgba("+Math.round(1*a.r)+", "+Math.round(1*a.g)+", "+Math.round(1*a.b)+", 0)"),n.addColorStop(1,"rgba("+Math.round(1*a.r)+", "+Math.round(1*a.g)+", "+Math.round(1*a.b)+", 0.5)"),this.ctx.fillStyle=n,this.ctx.fillRect(0,e,this.width,this.inlandSize)}},{key:"randomGradientCircle",value:function(){var e=this.randRange(0,this.width),t=this.randRange(0,this.height)-this.height*this.waterLevel,n=this.randRange(10,this.circleSize),a=e,o=t,i=n,r=this.ctx.createRadialGradient(e,t,0,a,o,i),s=this.randomColor();r.addColorStop(0,"rgba("+s.r+", "+s.g+", "+s.b+", 1.0)"),r.addColorStop(1,"rgba("+s.r+", "+s.g+", "+s.b+", 0.0)"),this.ctx.fillStyle=r,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"randomWaterColor",value:function(){var e=this.baseColor.clone(),t=0,n=this.randRange(0,1);t=n<.33?0+this.randRange(-.1,.1):n<.66?this.colorAngle+this.randRange(-.1,.1):-this.colorAngle+this.randRange(-.1,.1);var a=e.getHSL();return a.h+=t,a.s=this.randRange(0,.6),a.l=this.randRange(.1,.5),e.setHSL(a.h,a.s,a.l),{r:Math.round(255*e.r),g:Math.round(255*e.g),b:Math.round(255*e.b)}}},{key:"randomColor",value:function(){var e=this.baseColor.clone(),t=0,n=this.randRange(0,1);t=n<.33?0+this.randRange(-.1,.1):n<.66?this.colorAngle+this.randRange(-.1,.1):-this.colorAngle+this.randRange(-.1,.1);var a=this.randRange(-this.satRange,this.satRange),o=this.randRange(-this.lightRange,this.lightRange),i=e.getHSL();if(i.h+=t,i.s+=a,i.l+=o,i.l<0&&(i.l=Math.abs(i.l)),i.l>.7){var r=i.l-.7;i.l=.7-r}return e.setHSL(i.h,i.s,i.l),{r:Math.round(255*e.r),g:Math.round(255*e.g),b:Math.round(255*e.b)}}},{key:"toCanvasColor",value:function(e){return"rgba("+Math.round(255*e.r)+", "+Math.round(255*e.g)+", "+Math.round(255*e.b)+", 1.0)"}},{key:"randRange",value:function(e,t){var n=t-e;return e+window.rng()*n}},{key:"mix",value:function(e,t,n){return e+(t-e)*n}}]),e}();t.a=r},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=n(3),s=n(15),c=n.n(s),l=n(226),d=n.n(l),f=n(12),h=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function e(t,n,a){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,a)}if("value"in o)return o.value;var r=o.get;if(void 0!==r)return r.call(a)},v=function(e){function t(){a(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.setup(),u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setup",e).call(e),e}return i(t,e),h(t,[{key:"setup",value:function(){this.mats=[];for(var e=0;e<6;e++)this.mats[e]=new r.ShaderMaterial({uniforms:{index:{type:"i",value:e},seed:{type:"f",value:0},resolution:{type:"f",value:0},res1:{type:"f",value:0},res2:{type:"f",value:0},resMix:{type:"f",value:0},mixScale:{type:"f",value:0}},vertexShader:c.a,fragmentShader:d.a,transparent:!0,depthWrite:!1})}},{key:"render",value:function(e){for(var n=0;n<6;n++)this.mats[n].uniforms.seed.value=e.seed,this.mats[n].uniforms.resolution.value=e.resolution,this.mats[n].uniforms.res1.value=e.res1,this.mats[n].uniforms.res2.value=e.res2,this.mats[n].uniforms.resMix.value=e.resMix,this.mats[n].uniforms.mixScale.value=e.mixScale,this.mats[n].needsUpdate=!0;u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"render",this).call(this,e)}}]),t}(f.a);t.a=v},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=n(94),r=n(219),s=(n.n(r),function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}()),c=function(){function e(){var t=this;a(this,e),this.view=new o.Object3D,this.materials=[],this.roughness=.9,this.metalness=.5,this.normalScale=5,this.clouds=1,this.resolution=1024,this.size=1001,this.color=new o.Color(16777215),this.cloudColor=[255*this.color.r,255*this.color.g,255*this.color.b],this.cloudMaps=[],this.setup(),window.gui.add(this,"clouds",0,1).onChange(function(e){t.updateMaterial()}),window.gui.addColor(this,"cloudColor").onChange(function(e){t.color.r=e[0]/255,t.color.g=e[1]/255,t.color.b=e[2]/255,t.updateMaterial()})}return s(e,[{key:"update",value:function(){}},{key:"setup",value:function(){this.cloudMap=new i.a,this.cloudMaps=this.cloudMap.maps;for(var e=0;e<6;e++){var t=new o.MeshStandardMaterial({color:this.color,transparent:!0});this.materials[e]=t}var n=new o.BoxGeometry(1,1,1,64,64,64),a=this.size;for(var r in n.vertices){n.vertices[r].normalize().multiplyScalar(a)}this.computeGeometry(n),this.sphere=new o.Mesh(n,this.materials),this.view.add(this.sphere)}},{key:"render",value:function(e){this.seed=this.randRange(0,1e3);this.randRange(.5,1),this.map_range(e.waterLevel*e.waterLevel,0,.8,0,3);this.cloudMap.render({seed:this.seed,resolution:this.resolution,res1:this.randRange(.1,1),res2:this.randRange(.1,1),resMix:this.randRange(.1,1),mixScale:this.randRange(.1,1)}),this.updateMaterial()}},{key:"map_range",value:function(e,t,n,a,o){return a+(o-a)*(e-t)/(n-t)}},{key:"updateMaterial",value:function(){for(var e=0;e<6;e++){var t=this.materials[e];t.roughness=this.roughness,t.metalness=this.metalness,t.opacity=this.clouds,t.map=this.cloudMaps[e],t.color=this.color}}},{key:"randomizeColor",value:function(){this.color.r=this.randRange(.7,1),this.color.g=this.randRange(.7,1),this.color.b=this.randRange(.7,1),this.updateMaterial()}},{key:"randRange",value:function(e,t){var n=t-e;return e+window.rng()*n}},{key:"computeGeometry",value:function(e){e.computeVertexNormals(),e.computeFaceNormals(),e.computeMorphNormals(),e.computeBoundingSphere(),e.computeBoundingBox(),e.computeLineDistances(),e.verticesNeedUpdate=!0,e.elementsNeedUpdate=!0,e.uvsNeedUpdate=!0,e.normalsNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0,e.groupsNeedUpdate=!0}}]),e}();t.a=c},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=n(231),r=n.n(i),s=n(230),c=n.n(s),l=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),d=function(){function e(){a(this,e),this.view=new o.Object3D,this.randomizeColor(),this.size=1030,this.glow=1,this.c=1,this.p=1.4;var t=window.gui.addFolder("Glow");t.add(this,"c",0,1).step(.01),t.add(this,"p",0,6).step(.01),this.mat=new o.ShaderMaterial({vertexShader:r.a,fragmentShader:c.a,uniforms:{c:{type:"f",value:1},p:{type:"f",value:1.4},glowColor:{type:"c",value:new o.Color(65535)},viewVector:{type:"v3",value:window.camera.position}}}),this.mat.transparent=!0,this.mat.blending=o.AdditiveBlending,this.mat.side=o.BackSide,this.geo=new o.IcosahedronBufferGeometry(1,6),this.sphere=new o.Mesh(this.geo,this.mat),this.sphere.scale.set(this.size,this.size,this.size),this.view.add(this.sphere)}return l(e,[{key:"update",value:function(){this.mat.uniforms.c.value=this.c,this.mat.uniforms.p.value=this.p,this.mat.uniforms.viewVector.value=(new o.Vector3).subVectors(window.camera.position,this.sphere.position)}},{key:"randomize",value:function(){this.randomizeColor(),this.mat.uniforms.color.value=this.color}},{key:"randomizeColor",value:function(){this.color=new o.Color,this.color.r=window.rng(),this.color.g=window.rng(),this.color.b=window.rng()}}]),e}();t.a=d},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=function(){function e(){a(this,e),this.base=document.createElement("div"),this.base.id="loadingBarHolder",this.base.innerHTML='Rendering Planet</br><div id="loadingBarBase"><div id="loadingBar"></div></div>'}return o(e,[{key:"update",value:function(e){this.bar=document.getElementById("loadingBar"),this.bar.style.width=100*e+"%"}},{key:"show",value:function(){document.body.appendChild(this.base),this.bar=document.getElementById("loadingBar"),this.bar.style.width="0%"}},{key:"hide",value:function(){document.body.removeChild(this.base)}}]),e}();t.a=i},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=n(99),r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=function(){function e(){a(this,e),this.view=new o.Object3D,this.materials=[],this.roughness=.8,this.metalness=.5,this.emissiveIntensity=1,this.resolution=1024,this.size=45e3,this.nebula=.8,this.skyMaps=[],this.setup()}return r(e,[{key:"update",value:function(){}},{key:"setup",value:function(){this.skyMap=new i.a,this.skyMaps=this.skyMap.maps;for(var e=0;e<6;e++){var t=new o.MeshBasicMaterial({color:new o.Color(16777215),side:o.BackSide,transparent:!0,opacity:this.nebula});this.materials[e]=t}var n=new o.BoxGeometry(1,1,1,32,32,32),a=this.size;for(var r in n.vertices){n.vertices[r].normalize().multiplyScalar(a)}this.computeGeometry(n),this.sphere=new o.Mesh(n,this.materials),this.view.add(this.sphere)}},{key:"render",value:function(e){this.seed=this.randRange(0,1e3);this.skyMap.render({seed:this.seed,resolution:this.resolution,res1:this.randRange(1,3),res2:this.randRange(1,3),resMix:this.randRange(1,3),mixScale:this.randRange(1,3),color1:this.color1,color2:this.color2,color3:this.color3,nebulaeMap:e.nebulaeMap}),this.updateMaterial()}},{key:"updateMaterial",value:function(){for(var e=0;e<6;e++){var t=this.materials[e];t.map=this.skyMaps[e],t.opacity=this.nebula}}},{key:"randRange",value:function(e,t){var n=t-e;return e+window.rng()*n}},{key:"computeGeometry",value:function(e){e.computeVertexNormals(),e.computeFaceNormals(),e.computeMorphNormals(),e.computeBoundingSphere(),e.computeBoundingBox(),e.computeLineDistances(),e.verticesNeedUpdate=!0,e.elementsNeedUpdate=!0,e.uvsNeedUpdate=!0,e.normalsNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0,e.groupsNeedUpdate=!0}}]),e}();t.a=s},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=n(3),s=n(15),c=n.n(s),l=n(232),d=n.n(l),f=n(12),h=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function e(t,n,a){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,a)}if("value"in o)return o.value;var r=o.get;if(void 0!==r)return r.call(a)},v=function(e){function t(){a(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.setup(),u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setup",e).call(e),e}return i(t,e),h(t,[{key:"setup",value:function(){this.mats=[];for(var e=0;e<6;e++)this.mats[e]=new r.ShaderMaterial({uniforms:{index:{type:"i",value:e},seed:{type:"f",value:0},resolution:{type:"f",value:0},res1:{type:"f",value:0},res2:{type:"f",value:0},resMix:{type:"f",value:0},mixScale:{type:"f",value:0},nebulaeMap:{type:"t",value:new r.Texture}},vertexShader:c.a,fragmentShader:d.a,transparent:!0,depthWrite:!1})}},{key:"render",value:function(e){for(var n=0;n<6;n++)this.mats[n].uniforms.seed.value=e.seed,this.mats[n].uniforms.resolution.value=e.resolution,this.mats[n].uniforms.res1.value=e.res1,this.mats[n].uniforms.res2.value=e.res2,this.mats[n].uniforms.resMix.value=e.resMix,this.mats[n].uniforms.mixScale.value=e.mixScale,this.mats[n].uniforms.nebulaeMap.value=e.nebulaeMap,this.mats[n].needsUpdate=!0;u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"render",this).call(this,e)}}]),t}(f.a);t.a=v},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=function(){function e(){a(this,e),this.canvas=document.createElement("canvas"),this.canvas.id="nebulaeCanvas",this.canvas.width=512,this.canvas.height=512,this.canvas.style.width="200px",this.canvas.style.height="200px",this.width=this.canvas.width,this.height=this.canvas.height,this.ctx=this.canvas.getContext("2d"),document.body.appendChild(this.canvas),this.toggleCanvasDisplay(!1)}return i(e,[{key:"generateTexture",value:function(){var e=this.randRange(0,1),t=this.randRange(.2,.8),n=this.randRange(.2,.6);this.baseColor=(new o.Color).setHSL(e,t,n),this.colorAngle=this.randRange(0,.5),this.fillBaseColor(),this.drawShapes(),this.texture=new o.CanvasTexture(this.canvas)}},{key:"toggleCanvasDisplay",value:function(e){this.canvas.style.display=e?"block":"none"}},{key:"fillBaseColor",value:function(){this.ctx.fillStyle=this.toCanvasColor(this.baseColor),this.ctx.fillRect(0,0,this.width,this.height)}},{key:"drawShapes",value:function(){for(var e=Math.round(this.randRange(20,50)),t=0;t<e;t++)this.randomGradientCircle()}},{key:"randomGradientCircle",value:function(){var e=this.randRange(0,this.width),t=this.randRange(0,this.height),n=this.randRange(100,200),a=e,o=t,i=n,r=this.ctx.createRadialGradient(e,t,0,a,o,i),s=this.randomColor();r.addColorStop(0,"rgba("+s.r+", "+s.g+", "+s.b+", 1.0)"),r.addColorStop(1,"rgba("+s.r+", "+s.g+", "+s.b+", 0.0)"),this.ctx.fillStyle=r,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"randomColor",value:function(){var e=this.baseColor.clone(),t=0,n=this.randRange(0,1);t=n<.33?0+this.randRange(-.1,.1):n<.66?this.colorAngle+this.randRange(-.1,.1):-this.colorAngle+this.randRange(-.1,.1);var a=this.randRange(-.4,.2),o=this.randRange(-.4,.2);return e.offsetHSL(t,a,o),{r:Math.round(255*e.r),g:Math.round(255*e.g),b:Math.round(255*e.b)}}},{key:"toCanvasColor",value:function(e){return"rgba("+Math.round(255*e.r)+", "+Math.round(255*e.g)+", "+Math.round(255*e.b)+", 1.0)"}},{key:"randRange",value:function(e,t){var n=t-e;return e+window.rng()*n}},{key:"mix",value:function(e,t,n){return e+(t-e)*n}}]),e}();t.a=r},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=n(3),s=n(15),c=n.n(s),l=n(229),d=n.n(l),f=n(12),h=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function e(t,n,a){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,a)}if("value"in o)return o.value;var r=o.get;if(void 0!==r)return r.call(a)},v=function(e){function t(){a(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.setup(),u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setup",e).call(e),e}return i(t,e),h(t,[{key:"setup",value:function(){this.mats=[];for(var e=0;e<6;e++)this.mats[e]=new r.ShaderMaterial({uniforms:{index:{type:"i",value:e},seed:{type:"f",value:0},resolution:{type:"f",value:0},res1:{type:"f",value:0},res2:{type:"f",value:0},resMix:{type:"f",value:0},mixScale:{type:"f",value:0},doesRidged:{type:"f",value:0}},vertexShader:c.a,fragmentShader:d.a,transparent:!0,depthWrite:!1})}},{key:"render",value:function(e){for(var n=(e.resolution,0);n<6;n++)this.mats[n].uniforms.seed.value=e.seed,this.mats[n].uniforms.resolution.value=e.resolution,this.mats[n].uniforms.res1.value=e.res1,this.mats[n].uniforms.res2.value=e.res2,this.mats[n].uniforms.resMix.value=e.resMix,this.mats[n].uniforms.mixScale.value=e.mixScale,this.mats[n].uniforms.doesRidged.value=e.doesRidged,this.mats[n].needsUpdate=!0;u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"render",this).call(this,e)}}]),t}(f.a);t.a=v},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=n(3),s=n(84),c=n.n(s),l=n(83),d=n.n(l),f=n(12),h=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function e(t,n,a){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,a)}if("value"in o)return o.value;var r=o.get;if(void 0!==r)return r.call(a)},v=function(e){function t(){a(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.setup(),u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setup",e).call(e),e}return i(t,e),h(t,[{key:"setup",value:function(){this.mats=[];for(var e=0;e<6;e++)this.mats[e]=new r.ShaderMaterial({uniforms:{resolution:{type:"f",value:0},waterLevel:{type:"f",value:0},heightMap:{type:"t",value:new r.Texture},textureMap:{type:"t",value:new r.Texture}},vertexShader:c.a,fragmentShader:d.a,transparent:!0,depthWrite:!1})}},{key:"render",value:function(e){for(var n=0;n<6;n++)this.mats[n].uniforms.resolution.value=e.resolution,this.mats[n].uniforms.waterLevel.value=e.waterLevel,this.mats[n].uniforms.heightMap.value=e.heightMaps[n],this.mats[n].uniforms.textureMap.value=e.textureMaps[n],this.mats[n].needsUpdate=!0;u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"render",this).call(this,e)}}]),t}(f.a);t.a=v},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=n(15),r=(n.n(i),n(86)),s=(n.n(r),n(83)),c=(n.n(s),n(84)),l=(n.n(c),n(85)),d=(n.n(l),n(93)),f=n(91),h=n(101),u=n(110),v=n(102),g=n(105),p=n(95),m=n(107),y=n(98),x=n(108),b=n(96),w=n(100),z=n(195),_=n.n(z),P=n(141),S=(n.n(P),n(92),n(192)),C=n.n(S),M=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),R=function(){function e(){var t=this;a(this,e),this.seedString="Scarlett",this.initSeed(),this.view=new o.Object3D,this.materials=[],this.roughness=.8,this.metalness=.5,this.normalScale=3,this.resolution=1024,this.size=1e3,this.waterLevel=0,this.heightMaps=[],this.moistureMaps=[],this.textureMaps=[],this.normalMaps=[],this.roughnessMaps=[];var n=gui.addFolder("Material");this.roughnessControl=n.add(this,"roughness",0,1),this.roughnessControl.onChange(function(e){t.updateMaterial()}),this.metalnessControl=n.add(this,"metalness",0,1),this.metalnessControl.onChange(function(e){t.updateMaterial()}),this.normalScaleControl=n.add(this,"normalScale",-3,6).listen(),this.normalScaleControl.onChange(function(e){t.updateMaterial()}),this.displayMap="textureMap";var i=gui.addFolder("Debug");this.displayMapControl=i.add(this,"displayMap",["textureMap","heightMap","moistureMap","normalMap","roughnessMap"]),this.displayMapControl.onChange(function(e){t.updateMaterial()}),this.showBiomeMap=!1,this.showBiomeMapControl=i.add(this,"showBiomeMap"),this.showBiomeMapControl.onChange(function(e){t.biome&&t.biome.toggleCanvasDisplay(e)}),this.showNebulaMap=!1,this.showNebulaMapControl=i.add(this,"showNebulaMap"),this.showNebulaMapControl.onChange(function(e){t.nebulaeGradient&&t.nebulaeGradient.toggleCanvasDisplay(e)}),this.biome=new d.a,this.nebulaeGradient=new w.a,this.createScene(),this.createStars(),this.createNebula(),this.createSun(),this.createAtmosphere(),this.loadSeedFromURL();var r=gui.addFolder("Environment");r.add(this.atmosphere,"atmosphere",0,1).step(.01),r.add(this.nebula,"nebula",0,1).step(.01).onChange(function(e){t.nebula.updateMaterial()}),this.rotate=!0,this.autoGenerate=!1,this.autoGenCountCurrent=0,this.autoGenTime=180,this.autoGenCountMax=60*this.autoGenTime,window.gui.add(this,"rotate"),this.resolutionControl=window.gui.add(this,"resolution",[256,512,1024,2048,4096]),this.resolutionControl.onChange(function(e){t.regenerate()}),i.add(this,"autoGenerate"),this.autoGenTimeControl=i.add(this,"autoGenTime",30,300).step(1),this.autoGenTimeControl.onChange(function(e){t.autoGenCountMax=60*t.autoGenTime}),this.seedStringControl=window.gui.add(this,"seedString").listen(),this.seedStringControl.onFinishChange(function(e){t.loadSeedFromTextfield()}),window.gui.add(this,"randomize"),document.addEventListener("keydown",function(e){32==e.keyCode&&t.randomize()}),window.onpopstate=function(e){t.loadSeedFromURL()}}return M(e,[{key:"update",value:function(){this.rotate&&(this.ground.rotation.y+=5e-4,this.stars.view.rotation.y+=3e-4,this.nebula.view.rotation.y+=3e-4),this.atmosphere.update(),this.autoGenerate&&++this.autoGenCountCurrent>this.autoGenCountMax&&this.randomize(),this.stars.view.position.copy(window.camera.position),this.nebula.view.position.copy(window.camera.position)}},{key:"initSeed",value:function(){window.rng=_()(this.seedString)}},{key:"loadSeedFromURL",value:function(){this.seedString=this.getParameterByName("seed"),this.seedString?(console.log("seed string exists"),this.regenerate()):(console.log("no seed string"),this.randomize())}},{key:"loadSeedFromTextfield",value:function(){var e=this.updateQueryString("seed",this.seedString);window.history.pushState({seed:this.seedString},this.seedString,e),this.regenerate()}},{key:"regenerate",value:function(){this.autoGenCountCurrent=0,this.renderScene()}},{key:"randomize",value:function(){var e=Math.random(),t=0;t=e>.8?1:e>.4?2:3,this.seedString="";for(var n=0;n<t;n++)this.seedString+=this.capitalizeFirstLetter(C()({min:2,max:8})),n<t-1&&(this.seedString+=" ");var a=this.updateQueryString("seed",this.seedString);window.history.pushState({seed:this.seedString},this.seedString,a),this.autoGenCountCurrent=0,this.renderScene()}},{key:"capitalizeFirstLetter",value:function(e){return e.charAt(0).toUpperCase()+e.slice(1)}},{key:"createScene",value:function(){this.heightMap=new h.a,this.heightMaps=this.heightMap.maps,this.moistureMap=new h.a,this.moistureMaps=this.moistureMap.maps,this.textureMap=new u.a,this.textureMaps=this.textureMap.maps,this.normalMap=new v.a,this.normalMaps=this.normalMap.maps,this.roughnessMap=new g.a,this.roughnessMaps=this.roughnessMap.maps;for(var e=0;e<6;e++){var t=new o.MeshStandardMaterial({color:new o.Color(16777215)});this.materials[e]=t}var n=new o.BoxGeometry(1,1,1,64,64,64),a=this.size;for(var i in n.vertices){n.vertices[i].normalize().multiplyScalar(a)}this.computeGeometry(n),this.ground=new o.Mesh(n,this.materials),this.view.add(this.ground)}},{key:"renderScene",value:function(){var e=this;this.initSeed(),this.seed=1e3*this.randRange(0,1),this.waterLevel=this.randRange(.1,.5),this.updateNormalScaleForRes(this.resolution),this.renderBiomeTexture(),this.renderNebulaeGradient(),this.stars.resolution=this.resolution,this.nebula.resolution=this.resolution,this.atmosphere.randomizeColor(),window.renderQueue.start();this.heightMap.render({seed:this.seed,resolution:this.resolution,res1:this.randRange(.1,3),res2:this.randRange(.1,3),resMix:this.randRange(.1,3),mixScale:this.randRange(.5,1),doesRidged:Math.floor(this.randRange(0,4))}),this.moistureMap.render({seed:this.seed+392.253,resolution:this.resolution,res1:this.randRange(.1,3),res2:this.randRange(.1,3),resMix:this.randRange(.1,3),mixScale:this.randRange(.5,1),doesRidged:Math.floor(this.randRange(0,4))}),this.textureMap.render({resolution:this.resolution,heightMaps:this.heightMaps,moistureMaps:this.moistureMaps,biomeMap:this.biome.texture}),this.normalMap.render({resolution:this.resolution,waterLevel:this.waterLevel,heightMaps:this.heightMaps,textureMaps:this.textureMaps}),this.roughnessMap.render({resolution:this.resolution,heightMaps:this.heightMaps,waterLevel:this.waterLevel}),this.stars.render({nebulaeMap:this.nebulaeGradient.texture}),this.nebula.render({nebulaeMap:this.nebulaeGradient.texture}),this.sun.render(),window.renderQueue.addCallback(function(){e.updateMaterial()})}},{key:"updateMaterial",value:function(){for(var e=0;e<6;e++){var t=this.materials[e];t.roughness=this.roughness,t.metalness=this.metalness,"textureMap"==this.displayMap?(t.map=this.textureMaps[e],t.normalMap=this.normalMaps[e],t.normalScale=new o.Vector2(this.normalScale,this.normalScale),t.roughnessMap=this.roughnessMaps[e]):"heightMap"==this.displayMap?(t.map=this.heightMaps[e],t.normalMap=null,t.roughnessMap=null):"moistureMap"==this.displayMap?(t.map=this.moistureMaps[e],t.normalMap=null,t.roughnessMap=null):"normalMap"==this.displayMap?(t.map=this.normalMaps[e],t.normalMap=null,t.roughnessMap=null):"roughnessMap"==this.displayMap&&(t.map=this.roughnessMaps[e],t.normalMap=null,t.roughnessMap=null),t.needsUpdate=!0}}},{key:"renderBiomeTexture",value:function(){this.biome.generateTexture({waterLevel:this.waterLevel})}},{key:"renderNebulaeGradient",value:function(){this.nebulaeGradient.generateTexture()}},{key:"createAtmosphere",value:function(){this.atmosphere=new f.a,this.view.add(this.atmosphere.view)}},{key:"createGlow",value:function(){this.glow=new b.a,this.view.add(this.glow.view)}},{key:"createClouds",value:function(){this.clouds=new p.a,this.view.add(this.clouds.view)}},{key:"createStars",value:function(){this.stars=new m.a,this.view.add(this.stars.view)}},{key:"createNebula",value:function(){this.nebula=new y.a,this.view.add(this.nebula.view)}},{key:"createSun",value:function(){this.sun=new x.a,this.view.add(this.sun.view)}},{key:"updateNormalScaleForRes",value:function(e){256==e&&(this.normalScale=.25),512==e&&(this.normalScale=.5),1024==e&&(this.normalScale=1),2048==e&&(this.normalScale=1.5),4096==e&&(this.normalScale=3)}},{key:"randRange",value:function(e,t){var n=t-e;return e+window.rng()*n}},{key:"computeGeometry",value:function(e){e.computeVertexNormals(),e.computeFaceNormals(),e.computeMorphNormals(),e.computeBoundingSphere(),e.computeBoundingBox(),e.computeLineDistances(),e.verticesNeedUpdate=!0,e.elementsNeedUpdate=!0,e.uvsNeedUpdate=!0,e.normalsNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0,e.groupsNeedUpdate=!0}},{key:"updateQueryString",value:function(e,t,n){n||(n=window.location.href);var a,o=new RegExp("([?&])"+e+"=.*?(&|#|$)(.*)","gi");if(o.test(n))return void 0!==t&&null!==t?n.replace(o,"$1"+e+"="+t+"$2$3"):(a=n.split("#"),n=a[0].replace(o,"$1$3").replace(/(&|\?)$/,""),void 0!==a[1]&&null!==a[1]&&(n+="#"+a[1]),n);if(void 0!==t&&null!==t){var i=-1!==n.indexOf("?")?"&":"?";return a=n.split("#"),n=a[0]+i+e+"="+t,void 0!==a[1]&&null!==a[1]&&(n+="#"+a[1]),n}return n}},{key:"getParameterByName",value:function(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)"),a=n.exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null}}]),e}();t.a=R},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(97),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=function(){function e(){a(this,e),this.actions=[],this.callbacks=[],this.skipFrame=!1,this.lastTime=0,this.totalActions=0,this.loadingBar=new o.a}return i(e,[{key:"start",value:function(){this.startFrame=!0,this.lastTime=Date.now(),this.loadingBar.show()}},{key:"update",value:function(){0==this.startFrame?this.actions.length>0?this.doNextAction():this.checkCallbacks():(this.startFrame=!1,this.totalActions=this.actions.length)}},{key:"doNextAction",value:function(){var e=Date.now();this.lastTime;this.lastTime=e,this.actions[0](),this.actions.shift();var t=this.actions.length/this.totalActions;t=1-t,this.loadingBar.update(t)}},{key:"addAction",value:function(e){this.actions.push(e)}},{key:"addCallback",value:function(e){this.callbacks.push(e)}},{key:"checkCallbacks",value:function(){this.callbacks.length>0&&this.executeCallbacks()}},{key:"executeCallbacks",value:function(){for(var e=0;e<this.callbacks.length;e++)this.callbacks[e]();this.loadingBar.hide(),this.callbacks=[]}}]),e}();t.a=r},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=n(3),s=n(15),c=n.n(s),l=n(85),d=n.n(l),f=n(12),h=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function e(t,n,a){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,a)}if("value"in o)return o.value;var r=o.get;if(void 0!==r)return r.call(a)},v=function(e){function t(){a(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.setup(),u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setup",e).call(e),e}return i(t,e),h(t,[{key:"setup",value:function(){this.mats=[];for(var e=0;e<6;e++)this.mats[e]=new r.ShaderMaterial({uniforms:{resolution:{type:"f",value:0},waterLevel:{type:"f",value:0},heightMap:{type:"t",value:new r.Texture}},vertexShader:c.a,fragmentShader:d.a,transparent:!0,depthWrite:!1})}},{key:"render",value:function(e){for(var n=0;n<6;n++)this.mats[n].uniforms.resolution.value=e.resolution,this.mats[n].uniforms.waterLevel.value=e.waterLevel,this.mats[n].uniforms.heightMap.value=e.heightMaps[n],this.mats[n].needsUpdate=!0;u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"render",this).call(this,e)}}]),t}(f.a);t.a=v},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=n(3),s=n(15),c=n.n(s),l=n(234),d=n.n(l),f=n(12),h=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function e(t,n,a){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,a)}if("value"in o)return o.value;var r=o.get;if(void 0!==r)return r.call(a)},v=function(e){function t(){a(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.setup(),u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setup",e).call(e),e}return i(t,e),h(t,[{key:"setup",value:function(){this.mats=[];for(var e=0;e<6;e++)this.mats[e]=new r.ShaderMaterial({uniforms:{index:{type:"i",value:e},seed:{type:"f",value:0},resolution:{type:"f",value:0},res1:{type:"f",value:0},res2:{type:"f",value:0},resMix:{type:"f",value:0},mixScale:{type:"f",value:0},nebulaeMap:{type:"t",value:new r.Texture}},vertexShader:c.a,fragmentShader:d.a,transparent:!0,depthWrite:!1})}},{key:"render",value:function(e){for(var n=0;n<6;n++)this.mats[n].uniforms.seed.value=e.seed,this.mats[n].uniforms.resolution.value=e.resolution,this.mats[n].uniforms.res1.value=e.res1,this.mats[n].uniforms.res2.value=e.res2,this.mats[n].uniforms.resMix.value=e.resMix,this.mats[n].uniforms.mixScale.value=e.mixScale,this.mats[n].uniforms.nebulaeMap.value=e.nebulaeMap,this.mats[n].needsUpdate=!0;u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"render",this).call(this,e)}}]),t}(f.a);t.a=v},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=n(106),r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=function(){function e(){a(this,e),this.view=new o.Object3D,this.materials=[],this.roughness=.8,this.metalness=.5,this.emissiveIntensity=1,this.resolution=1024,this.size=5e4,this.starMaps=[],this.setup()}return r(e,[{key:"update",value:function(){}},{key:"setup",value:function(){this.starMap=new i.a,this.starMaps=this.starMap.maps;for(var e=0;e<6;e++){var t=new o.MeshBasicMaterial({color:new o.Color(16777215),side:o.BackSide});this.materials[e]=t}var n=new o.BoxGeometry(1,1,1,32,32,32),a=this.size;for(var r in n.vertices){n.vertices[r].normalize().multiplyScalar(a)}this.computeGeometry(n),this.sphere=new o.Mesh(n,this.materials),this.view.add(this.sphere)}},{key:"render",value:function(e){this.seed=this.randRange(0,1e3),this.starMap.render({seed:this.seed,resolution:this.resolution,res1:this.randRange(.5,2),res2:this.randRange(.5,2),resMix:this.randRange(.5,2),mixScale:.5,color1:this.color1,color2:this.color2,color3:this.color3,nebulaeMap:e.nebulaeMap}),this.updateMaterial()}},{key:"updateMaterial",value:function(){for(var e=0;e<6;e++){this.materials[e].map=this.starMaps[e]}}},{key:"randRange",value:function(e,t){var n=t-e;return e+window.rng()*n}},{key:"computeGeometry",value:function(e){e.computeVertexNormals(),e.computeFaceNormals(),e.computeMorphNormals(),e.computeBoundingSphere(),e.computeBoundingBox(),e.computeLineDistances(),e.verticesNeedUpdate=!0,e.elementsNeedUpdate=!0,e.uvsNeedUpdate=!0,e.normalsNeedUpdate=!0,e.colorsNeedUpdate=!0,e.lineDistancesNeedUpdate=!0,e.groupsNeedUpdate=!0}}]),e}();t.a=s},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=n(109),r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),s=function(){function e(){a(this,e),this.view=new o.Object3D,this.setup()}return r(e,[{key:"setup",value:function(){var e=new o.TextureLoader;this.textureFlare=e.load("assets/textures/lenseFlareSun.jpg"),this.textureRing=e.load("assets/textures/lenseFlareRing.jpg"),this.textureBlur=e.load("assets/textures/lenseFlareBlur.jpg"),this.sunTexture=new i.a}},{key:"createLenseFlare",value:function(){var e=this.randRange(0,1),t=(new o.Color).setHSL(e,1,1),n=((new o.Color).setHSL(this.randRange(0,1),1,.5),this.randRange(1e3,2e3));n=1500,this.lensFlare=new o.LensFlare(this.sunTexture.texture,n,0,o.AdditiveBlending,t),this.lensFlare.add(this.sunTexture.texture,2*n,.1,o.AdditiveBlending,t,.2);for(var a=15,i=0;i<a;i++){var r=this.randRange(5,200),s=this.randRange(.05,.4),c=this.randomColor(),l=this.randRange(.1,.3);this.lensFlare.add(this.textureBlur,r,s,o.AdditiveBlending,c,l)}a=5;for(var d=0;d<a;d++){var f=this.randRange(5,200),h=this.randRange(-.05,-.2),u=this.randomColor(),v=this.randRange(.1,.3);this.lensFlare.add(this.textureBlur,f,h,o.AdditiveBlending,u,v)}for(var g=0;g<3;g++){var p=this.randRange(200,400),m=this.randRange(-.1,.2),y=this.randomColor(),x=this.randRange(0,.1);this.lensFlare.add(this.textureRing,p,m,o.AdditiveBlending,y,x)}this.lensFlare.position.set(-2e4,2e4,2e4),this.view.add(this.lensFlare)}},{key:"randomColor",value:function(){var e=this.randRange(0,1),t=this.randRange(0,.9);return(new o.Color).setHSL(e,t,.5)}},{key:"randRange",value:function(e,t){var n=t-e;return e+Math.random()*n}},{key:"render",value:function(){this.sunTexture.generateTexture(),this.view.remove(this.lensFlare),this.createLenseFlare()}}]),e}();t.a=s},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=n(3),i=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=function(){function e(){a(this,e),this.canvas=document.createElement("canvas"),this.canvas.id="sunCanvas",this.width=1024,this.height=1024,this.canvas.width=this.width,this.canvas.height=this.height,this.canvas.style.width="500px",this.canvas.style.height="500px",this.ctx=this.canvas.getContext("2d"),this.texture=new o.CanvasTexture(this.canvas),document.body.appendChild(this.canvas),this.toggleCanvasDisplay(!1)}return i(e,[{key:"generateTexture",value:function(){var e=this.randRange(0,1),t=this.randRange(0,.5),n=this.randRange(.2,.5);this.baseColor=(new o.Color).setHSL(e,t,n),this.baseHue=this.randRange(0,1),this.clear(),this.drawBaseGradient(),this.drawStarGradient(),this.drawBeams(),this.drawHalo(),this.texture=new o.CanvasTexture(this.canvas)}},{key:"clear",value:function(){this.ctx.fillStyle="#000000",this.ctx.fillRect(0,0,this.width,this.height)}},{key:"drawBaseGradient",value:function(){var e=this.width/2,t=this.width/2,n=this.width/2,a=this.baseHue,o=this.ctx.createRadialGradient(e,t,0,e,t,n);this.addColorToGradient(0,{h:a,s:.8,l:.1,a:.5},o),this.addColorToGradient(.4,{h:a,s:.8,l:.1,a:.7},o),this.addColorToGradient(.6,{h:a-.05,s:.8,l:.1,a:.3},o),this.addColorToGradient(.9,{h:a,s:.8,l:.1,a:0},o),this.ctx.fillStyle=o,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"drawStarGradient",value:function(){var e=this.width/2,t=this.width/2,n=this.width/2,a=this.baseHue-.1,o=.03;o=this.randRange(.03,.07);var i=this.ctx.createRadialGradient(e,t,0,e,t,n);this.addColorToGradient(0,{h:a,s:.6,l:1,a:1},i),this.addColorToGradient(o,{h:a,s:.6,l:.9,a:1},i),this.addColorToGradient(2*o,{h:a,s:.6,l:.6,a:.9},i),this.addColorToGradient(6*o,{h:a,s:.6,l:.4,a:.4},i),this.addColorToGradient(11*o,{h:a,s:.6,l:0,a:0},i),this.ctx.fillStyle=i,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"drawBeams",value:function(){var e=this.width/2,t=this.width/2,n=this.width/2,a=this.baseHue,o=.9,i=this.randRange(.5,1);i=1;var r=this.ctx.createRadialGradient(e,t,0,e,t,n);this.addColorToGradient(0,{h:a,s:1,l:o,a:.1},r),this.addColorToGradient(.15,{h:a,s:1,l:o,a:.025},r),this.addColorToGradient(i,{h:a,s:1,l:o,a:0},r);var s=Math.floor(this.randRange(1,5));s*=2;for(var c=this.randRange(.05,.2),l=2*Math.PI/s,d=0;d<s;d++)for(var f=l*d,h=0;h<5;h++)f+=.02,this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.arc(e,t,n,f,f+c),this.ctx.lineTo(e,t),this.ctx.fillStyle=r,this.ctx.fill();c=this.randRange(.01,.1),r=this.ctx.createRadialGradient(e,t,0,e,t,n),this.addColorToGradient(0,{h:a,s:1,l:o,a:.1},r),this.addColorToGradient(.15,{h:a,s:1,l:o,a:.025},r),this.addColorToGradient(i,{h:a,s:1,l:o,a:0},r);for(var u=this.randRange(.1,Math.PI),v=0;v<s;v++)for(var g=l*v+u,p=0;p<3;p++)g+=.02,this.ctx.beginPath(),this.ctx.moveTo(e,t),this.ctx.arc(e,t,n,g,g+c),this.ctx.lineTo(e,t),this.ctx.fillStyle=r,this.ctx.fill()}},{key:"drawHalo",value:function(){var e=this.width/2,t=this.width/2,n=this.width/2,a=this.baseHue+this.randRange(-.2,.2),o=.23;o=this.randRange(.1,.2);var i=this.ctx.createRadialGradient(e,t,0,e,t,n);this.addColorToGradient(o-.05,{h:a,s:1,l:.7,a:0},i),this.addColorToGradient(o,{h:a,s:1,l:.7,a:.2},i),this.addColorToGradient(o+.05,{h:a,s:1,l:.7,a:0},i),this.ctx.fillStyle=i,this.ctx.fillRect(0,0,this.width,this.height)}},{key:"addColorToGradient",value:function(e,t,n){n.addColorStop(e,this.getRGBAString(t))}},{key:"getRGBAString",value:function(e){var t=(new o.Color).setHSL(e.h,e.s,e.l),n={r:Math.round(255*t.r),g:Math.round(255*t.g),b:Math.round(255*t.b)};return"rgba("+n.r+", "+n.g+", "+n.b+","+e.a+")"}},{key:"toggleCanvasDisplay",value:function(e){this.canvas.style.display=e?"block":"none"}},{key:"randRange",value:function(e,t){var n=t-e;return e+window.rng()*n}}]),e}();t.a=r},function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=n(3),s=n(15),c=n.n(s),l=n(86),d=n.n(l),f=n(12),h=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),u=function e(t,n,a){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,n);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,n,a)}if("value"in o)return o.value;var r=o.get;if(void 0!==r)return r.call(a)},v=function(e){function t(){a(this,t);var e=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.setup(),u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"setup",e).call(e),e}return i(t,e),h(t,[{key:"setup",value:function(){this.mats=[];for(var e=0;e<6;e++)this.mats[e]=new r.ShaderMaterial({uniforms:{biomeMap:{type:"t",value:new r.Texture},heightMap:{type:"t",value:new r.Texture},moistureMap:{type:"t",value:new r.Texture}},vertexShader:c.a,fragmentShader:d.a,transparent:!0,depthWrite:!1})}},{key:"render",value:function(e){for(var n=(e.resolution,0);n<6;n++)this.mats[n].uniforms.heightMap.value=e.heightMaps[n],this.mats[n].uniforms.moistureMap.value=e.moistureMaps[n],this.mats[n].uniforms.biomeMap.value=e.biomeMap,this.mats[n].needsUpdate=!0;u(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"render",this).call(this,e)}}]),t}(f.a);t.a=v},function(e,t,n){t=e.exports=n(142)(void 0),t.push([e.i,"body {\n    width: 100%;\n    height: 100%;\n    background-color: #000;\n    color: #fff;\n    margin: 0px;\n    padding: 0;\n    overflow: hidden;\n    font-family: Arial, \"Helvetica Neue\", Helvetica, sans-serif;\n}\n\n#biomeCanvas {\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n}\n\n#nebulaeCanvas {\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  left: 0px;\n}\n\n#sunCanvas {\n  position: absolute;\n  z-index: 1000;\n  bottom: 0px;\n  right: 0px;\n}\n\n/* Position the button VR on the bottom of the page. */\n#ui {\n    position: absolute;\n    bottom: 10px;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    font-family: 'Karla', sans-serif;\n    z-index: 1;\n}\n\na#magic-window {\n    display: block;\n    color: white;\n    margin-top: 1em;\n}\n\n#loadingBarHolder {\n  position: absolute;\n\n  left: 0px;\n  right: 0px;\n  top: 0px;\n  bottom: 0px;\n  margin: auto;\n\n  width: 25%;\n  height: 10%;\n\n  border: 1px solid #222222;\n  padding: 20px;\n  padding-top: 30px;\n  background-color: #111111;\n  z-index: 2000;\n}\n\n#loadingBarBase {\n  width: 100%;\n  height: 50%;\n  margin-top: 10px;\n  background-color: #222222;\n}\n\n#loadingBar {\n  width: 50%;\n  height: 100%;\n  background-color: #444444;\n}\n",""])},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports={modp1:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},modp2:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},modp5:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},modp14:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},modp15:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},modp16:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},modp17:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},modp18:{gen:"02",prime:"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}},function(e,t){e.exports={_from:"elliptic@^6.0.0",_id:"elliptic@6.4.0",_inBundle:!1,_integrity:"sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=",_location:"/elliptic",_phantomChildren:{},_requested:{type:"range",registry:!0,raw:"elliptic@^6.0.0",name:"elliptic",escapedName:"elliptic",rawSpec:"^6.0.0",saveSpec:null,fetchSpec:"^6.0.0"},_requiredBy:["/browserify-sign","/create-ecdh"],_resolved:"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz",_shasum:"cac9af8762c85836187003c8dfe193e5e2eae5df",_spec:"elliptic@^6.0.0",_where:"/Users/smithjak/Documents/Testbed/webpack-threejs-boilerplate-master/node_modules/browserify-sign",author:{name:"Fedor Indutny",email:"fedor@indutny.com"},bugs:{url:"https://github.com/indutny/elliptic/issues"},bundleDependencies:!1,dependencies:{"bn.js":"^4.4.0",brorand:"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0",inherits:"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},deprecated:!1,description:"EC cryptography",devDependencies:{brfs:"^1.4.3",coveralls:"^2.11.3",grunt:"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2",istanbul:"^0.4.2",jscs:"^2.9.0",jshint:"^2.6.0",mocha:"^2.1.0"},files:["lib"],homepage:"https://github.com/indutny/elliptic",keywords:["EC","Elliptic","curve","Cryptography"],license:"MIT",main:"lib/elliptic.js",name:"elliptic",repository:{type:"git",url:"git+ssh://git@github.com/indutny/elliptic.git"},scripts:{jscs:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",jshint:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",lint:"npm run jscs && npm run jshint",test:"npm run lint && npm run unit",unit:"istanbul test _mocha --reporter=spec test/index.js",version:"grunt dist && git add dist/"},version:"6.4.0"}},function(e,t){e.exports={"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports="#define GLSLIFY 1\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289_1_0(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\n\nfloat mod289_1_0(float x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\n\nvec4 permute_1_1(vec4 x) {\n     return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nfloat permute_1_1(float x) {\n     return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt_1_2(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt_1_2(float r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 grad4_1_3(float j, vec4 ip)\n  {\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n  return p;\n  }\n\n// (sqrt(5) - 1)/4 = F4, used once below\n#define F4 0.309016994374947451\n\nfloat snoise_1_4(vec4 v)\n  {\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\n                        0.276393202250021,  // 2 * G4\n                        0.414589803375032,  // 3 * G4\n                       -0.447213595499958); // -1 + 4 * G4\n\n// First corner\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n// Other corners\n\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n//  i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\n  vec4 x1 = x0 - i1 + C.xxxx;\n  vec4 x2 = x0 - i2 + C.yyyy;\n  vec4 x3 = x0 - i3 + C.zzzz;\n  vec4 x4 = x0 + C.wwww;\n\n// Permutations\n  i = mod289_1_0(i);\n  float j0 = permute_1_1( permute_1_1( permute_1_1( permute_1_1(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute_1_1( permute_1_1( permute_1_1( permute_1_1 (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n  vec4 p0_1_5 = grad4_1_3(j0,   ip);\n  vec4 p1 = grad4_1_3(j1.x, ip);\n  vec4 p2 = grad4_1_3(j1.y, ip);\n  vec4 p3 = grad4_1_3(j1.z, ip);\n  vec4 p4 = grad4_1_3(j1.w, ip);\n\n// Normalise gradients\n  vec4 norm = taylorInvSqrt_1_2(vec4(dot(p0_1_5,p0_1_5), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0_1_5 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt_1_2(dot(p4,p4));\n\n// Mix contributions from the five corners\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0_1_5, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n  }\n\n\n\n\nvarying vec3 vNormal;\nvarying vec3 vPosition;\nvarying vec3 cameraVector;\n\nuniform float time;\n\nuniform float atmo1;\nuniform float atmo2;\nuniform float atmo3;\nuniform float atmo4;\nuniform float atmo5;\n\nuniform float alpha;\n\nuniform vec3 color;\n\nvoid main() {\n\n    vec3 newColor = vec3(0.0);\n\n    const float ambient = 0.1;\n\t\tvec3 light = vec3( -1.0, 1.0, 1.0 );\n\t\tlight = normalize( light );\n\t\tfloat directional = max( dot( vNormal, light ), 0.0 ) * 1.0;\n\t\tvec4 texelColor = vec4( ( directional + ambient ) * newColor, 0.0 );\n\n    // gl_FragColor = texelColor;\n\n    // gl_FragColor = vec4(1.0);\n\n\n\n    ////////////////////////////\n    // atmospheric scattering\n    ///////////////////////////\n\n    // float PI = 3.14159265358979323846264;\n\t\t// // light = light - vPosition;\n\t\t// vec3 cameraDir = normalize(cameraVector);\n    //\n    // // vec3 newNormal = bumpNormal(normalMap, vUv);\n    // vec3 newNormal = vNormal;\n    //\n\t\t// light = normalize(light);\n    //\n\t\t// float lightAngle = max(0.0, dot(newNormal, light));\n\t\t// float viewAngle = max(0.0, dot(vNormal, cameraDir));\n\t\t// float adjustedLightAngle = min(0.6, lightAngle) / 0.6;\n\t\t// float adjustedViewAngle = min(0.65, viewAngle) / 0.65;\n\t\t// float invertedViewAngle = pow(acos(viewAngle), 3.0) * 0.4;\n    //\n\t\t// float dProd = 0.0;\n\t\t// dProd += atmo1 * lightAngle;\n\t\t// dProd += atmo2 * lightAngle * (invertedViewAngle - atmo5);\n\t\t// dProd += invertedViewAngle * 1.5 * (max(-0.35, dot(vNormal, light)) + 0.35);\n\t\t// dProd *= atmo3 + pow(invertedViewAngle/(PI/2.0), 2.0);\n    //\n\t\t// dProd *= atmo4;\n\t\t// vec4 atmColor = vec4(color, dProd);\n    //\n    // // texelColor = texture2D(map, vUv) * min(asin(lightAngle), 1.0);\n    // // texelColor = newColor * min(asin(lightAngle), 1.0);\n    //\n\t\t// gl_FragColor = texelColor + min(atmColor, alpha);\n\n    /////////////////////////\n\n\n    float PI = 3.14159265358979323846264;\n\t\t// light = light - vPosition;\n\t\tvec3 cameraDir = normalize(cameraVector);\n\n    // vec3 newNormal = bumpNormal(normalMap, vUv);\n    vec3 newNormal = vNormal;\n\n\t\tlight = normalize(light);\n\n\t\tfloat lightAngle = max(0.0, dot(newNormal, light));\n\t\tfloat viewAngle = max(0.0, dot(vNormal, cameraDir));\n\t\tfloat adjustedLightAngle = min(0.6, lightAngle) / 0.6;\n\t\tfloat adjustedViewAngle = min(0.65, viewAngle) / 0.65;\n\t\tfloat invertedViewAngle = pow(acos(viewAngle), 3.0) * 0.4;\n\n\t\tfloat dProd = 0.0;\n\t\tdProd += atmo1 * lightAngle;\n\t\tdProd += atmo2 * lightAngle * (invertedViewAngle - atmo5);\n\t\tdProd += invertedViewAngle * 1.5 * (max(-0.35, dot(vNormal, light)) + 0.35);\n\t\tdProd *= atmo3 + pow(invertedViewAngle/(PI/2.0), 2.0);\n\n\t\tdProd *= atmo4;\n\n\t\tvec4 atmColor = vec4(color, dProd);\n\n    // texelColor = texture2D(map, vUv) * min(asin(lightAngle), 1.0);\n    // texelColor = newColor * min(asin(lightAngle), 1.0);\n\n\t\tgl_FragColor = texelColor + min(atmColor, alpha);\n\n\n}\n"},function(e,t){e.exports="#define GLSLIFY 1\n// Source: http://jsfiddle.net/VsWb9/770/\n\n//\n// Atmospheric scattering fragment shader\n//\n// Author: Sean O'Neil\n//\n// Copyright (c) 2004 Sean O'Neil\n//\n\nuniform vec3 v3LightPos;\nuniform float g;\nuniform float g2;\nuniform vec3 atmosphereColor;\n\nvarying vec3 v3Direction;\nvarying vec3 c0;\nvarying vec3 c1;\n\n// Calculates the Mie phase function\nfloat getMiePhase(float fCos, float fCos2, float g, float g2)\n{\n  return 1.5 * ((1.0 - g2) / (2.0 + g2)) * (1.0 + fCos2) / pow(1.0 + g2 - 2.0 * g * fCos, 1.5);\n}\n\n// Calculates the Rayleigh phase function\nfloat getRayleighPhase(float fCos2)\n{\n return 0.75 + 0.75 * fCos2;\n}\n\nvoid main (void)\n{\n  float fCos = dot(v3LightPos, v3Direction) / length(v3Direction);\n  float fCos2 = fCos * fCos;\n\n  vec3 color =  getRayleighPhase(fCos2) * c0 + getMiePhase(fCos, fCos2, g, g2) * c1;\n\n  gl_FragColor = vec4(color, 1.0);\n  gl_FragColor.a = gl_FragColor.b;\n}\n"},function(e,t){e.exports="#define GLSLIFY 1\n// Source: http://jsfiddle.net/VsWb9/770/\n\n//\n// Atmospheric scattering vertex shader\n//\n// Author: Sean O'Neil\n//\n// Copyright (c) 2004 Sean O'Neil\n//\n\nuniform vec3 v3LightPosition;\t// The direction vector to the light source\nuniform vec3 v3InvWavelength;\t// 1 / pow(wavelength, 4) for the red, green, and blue channels\nuniform float fCameraHeight;\t// The camera's current height\nuniform float fCameraHeight2;\t// fCameraHeight^2\nuniform float fOuterRadius;\t\t// The outer (atmosphere) radius\nuniform float fOuterRadius2;\t// fOuterRadius^2\nuniform float fInnerRadius;\t\t// The inner (planetary) radius\nuniform float fInnerRadius2;\t// fInnerRadius^2\nuniform float fKrESun;\t\t\t// Kr * ESun\nuniform float fKmESun;\t\t\t// Km * ESun\nuniform float fKr4PI;\t\t\t// Kr * 4 * PI\nuniform float fKm4PI;\t\t\t// Km * 4 * PI\nuniform float fScale;\t\t\t// 1 / (fOuterRadius - fInnerRadius)\nuniform float fScaleDepth;\t\t// The scale depth (i.e. the altitude at which the atmosphere's average density is found)\nuniform float fScaleOverScaleDepth;\t// fScale / fScaleDepth\n\nconst int nSamples = 3;\nconst float fSamples = 3.0;\n\nvarying vec3 v3Direction;\nvarying vec3 c0;\nvarying vec3 c1;\n\n\nfloat scale(float fCos)\n{\n\tfloat x = 1.0 - fCos;\n\treturn fScaleDepth * exp(-0.00287 + x*(0.459 + x*(3.83 + x*(-6.80 + x*5.25))));\n}\n\nvoid main(void)\n{\n\t// Get the ray from the camera to the vertex and its length (which is the far point of the ray passing through the atmosphere)\n\tvec3 v3Ray = position - cameraPosition;\n\tfloat fFar = length(v3Ray);\n\tv3Ray /= fFar;\n\n\t// Calculate the closest intersection of the ray with the outer atmosphere (which is the near point of the ray passing through the atmosphere)\n\tfloat B = 2.0 * dot(cameraPosition, v3Ray);\n\tfloat C = fCameraHeight2 - fOuterRadius2;\n\tfloat fDet = max(0.0, B*B - 4.0 * C);\n\tfloat fNear = 0.5 * (-B - sqrt(fDet));\n\n\t// Calculate the ray's starting position, then calculate its scattering offset\n\tvec3 v3Start = cameraPosition + v3Ray * fNear;\n\tfFar -= fNear;\n\tfloat fStartAngle = dot(v3Ray, v3Start) / fOuterRadius;\n\tfloat fStartDepth = exp(-1.0 / fScaleDepth);\n\tfloat fStartOffset = fStartDepth * scale(fStartAngle);\n\t//c0 = vec3(1.0, 0, 0) * fStartAngle;\n\n\t// Initialize the scattering loop variables\n\tfloat fSampleLength = fFar / fSamples;\n\tfloat fScaledLength = fSampleLength * fScale;\n\tvec3 v3SampleRay = v3Ray * fSampleLength;\n\tvec3 v3SamplePoint = v3Start + v3SampleRay * 0.5;\n\n\t//gl_FrontColor = vec4(0.0, 0.0, 0.0, 0.0);\n\n\t// Now loop through the sample rays\n\tvec3 v3FrontColor = vec3(0.0, 0.0, 0.0);\n\tfor(int i=0; i<nSamples; i++)\n\t{\n\t\tfloat fHeight = length(v3SamplePoint);\n\t\tfloat fDepth = exp(fScaleOverScaleDepth * (fInnerRadius - fHeight));\n\t\tfloat fLightAngle = dot(v3LightPosition, v3SamplePoint) / fHeight;\n\t\tfloat fCameraAngle = dot(v3Ray, v3SamplePoint) / fHeight;\n\t\tfloat fScatter = (fStartOffset + fDepth * (scale(fLightAngle) - scale(fCameraAngle)));\n\t\tvec3 v3Attenuate = exp(-fScatter * (v3InvWavelength * fKr4PI + fKm4PI));\n\n\t\tv3FrontColor += v3Attenuate * (fDepth * fScaledLength);\n\t\tv3SamplePoint += v3SampleRay;\n\t}\n\n\t// Finally, scale the Mie and Rayleigh colors and set up the varying variables for the pixel shader\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\tc0 = v3FrontColor * (v3InvWavelength * fKrESun);\n\tc1 = v3FrontColor * fKmESun;\n\tv3Direction = cameraPosition - position;\n}\n"},function(e,t){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 4D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-08-22\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289_1_0(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_1_1(vec4 x)\n{\n  return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt_1_2(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 fade_1_3(vec4 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise_1_4(vec4 P)\n{\n  vec4 Pi0 = floor(P); // Integer part for indexing\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n  Pi0 = mod289_1_0(Pi0);\n  Pi1 = mod289_1_0(Pi1);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\n  vec4 ixy0 = permute_1_1(ixy + iz0);\n  vec4 ixy1 = permute_1_1(ixy + iz1);\n  vec4 ixy00 = permute_1_1(ixy0 + iw0);\n  vec4 ixy01 = permute_1_1(ixy0 + iw1);\n  vec4 ixy10 = permute_1_1(ixy1 + iw0);\n  vec4 ixy11 = permute_1_1(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 * (1.0 / 7.0);\n  vec4 gy00 = floor(gx00) * (1.0 / 7.0);\n  vec4 gz00 = floor(gy00) * (1.0 / 6.0);\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 * (1.0 / 7.0);\n  vec4 gy01 = floor(gx01) * (1.0 / 7.0);\n  vec4 gz01 = floor(gy01) * (1.0 / 6.0);\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 * (1.0 / 7.0);\n  vec4 gy10 = floor(gx10) * (1.0 / 7.0);\n  vec4 gz10 = floor(gy10) * (1.0 / 6.0);\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 * (1.0 / 7.0);\n  vec4 gy11 = floor(gx11) * (1.0 / 7.0);\n  vec4 gz11 = floor(gy11) * (1.0 / 6.0);\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt_1_2(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt_1_2(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt_1_2(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt_1_2(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade_1_3(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\n\n\n\nvarying vec2 vUv;\nuniform int index;\nuniform float seed;\nuniform float resolution;\nuniform float res1;\nuniform float res2;\nuniform float resMix;\nuniform float mixScale;\n\nvec3 getSphericalCoord(int index, float x, float y, float width) {\n\twidth /= 2.0;\n\tx -= width;\n\ty -= width;\n\tvec3 coord = vec3(0.0, 0.0, 0.0);\n\n\tif (index == 0) {coord.x=width; coord.y=-y; coord.z=-x;}\n\telse if (index == 1) {coord.x=-width; coord.y=-y; coord.z=x;}\n\telse if (index == 2) {coord.x=x; coord.y=width; coord.z=y;}\n\telse if (index == 3) {coord.x=x; coord.y=-width; coord.z=-y;}\n\telse if (index == 4) {coord.x=x; coord.y=-y; coord.z=width;}\n\telse if (index == 5) {coord.x=-x; coord.y=-y; coord.z=-width;}\n\n\treturn normalize(coord);\n}\n\n// float simplexRidged(vec3 pos, float seed) {\n// \tfloat n = noise(vec4(pos, seed));\n// \tn = (n + 1.0) * 0.5;\n// \tn = 2.0 * (0.5 - abs(0.5 - n));\n// \treturn n;\n// }\n\nfloat simplexRidged(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec4(pos, seed));\n\t// n = (n + 1.0) * 0.5;\n\t// n = 2.0 * (0.5 - abs(0.5 - n));\n\tn = abs(n);\n\treturn n;\n}\n\nfloat simplex(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec4(pos, seed));\n\t// return (n + 1.0) * 0.5;\n\tn = (n + 1.0) * 0.5;\n\t// n = 2.0 * (0.5 - abs(0.5 - n));\n\treturn n;\n}\n\nfloat baseNoise(vec3 pos, float frq, float seed ) {\n\tconst int octaves = 16;\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t\t// amp *= 2.0;\n\t}\n\n\n\t// n = fract(n*10.0);\n\n\n\n\n\t// n *= abs(sin(pos.y*10.0));\n\n\t// n += 0.4;\n\n\t// increase contrast\n\tn = ( (n - 0.5) * 2.0 ) + 0.6;\n\n\t// n = pow(n, 3.0);\n\n\t// n = pow( (1.0-n), 2.0);\n\n\n\t// n = pow(n, 2.0);\n\n\n\t// n = 1.0-n;\n\t// n = pow(n, 6.0);\n\t// n = 1.0-n;\n\n\treturn n;\n}\n\nfloat ridgedNoise(vec3 pos, float frq, float seed) {\n\tconst int octaves = 16;\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplexRidged(vec3(pos.x*gain/frq, 2.0*pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\t// n = pow(n, 5.0);\n\n\tn = 1.0-n;\n\tn = pow(n, 6.0);\n\tn = 1.0-n;\n\n\treturn n;\n}\n\nfloat billowNoise(vec3 pos, float frq, float seed) {\n\tconst int octaves = 16;\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\tn = 1.0-n;\n\tn = pow(n, 1.0);\n\tn = 1.0-n;\n\n\treturn n;\n}\n\nfloat cloud(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec4(pos, seed));\n\t// n = sin(n*4.0 * cos(n*2.0));\n\tn = sin(n*3.0);\n\n\tn = n*0.5 + 0.5;\n\t// n = abs(n);\n\t// n = 1.0-n;\n\t// n = n*1.2;\n\t// n = 1.0-n;\n\n\treturn n;\n}\n\nfloat cloudNoise(vec3 pos, float frq, float seed) {\n\tconst int octaves = 32;\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  cloud(vec3(pos.x*gain/frq, 1.0*pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\t// n = pow(n, 5.0);\n\n\tn = 1.0-n;\n\t// n = pow(n, mixScale);\n\tn = pow(n, 1.0);\n\tn = 1.0-n;\n\n\treturn n;\n}\n\nfloat perlin(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec4(pos, seed));\n\tn = (n + 1.0) * 0.5;\n\treturn n;\n}\n\nfloat perlinNoise(vec3 pos, float frq, float seed ) {\n\n\tconst int octaves = 16;\n\tfloat n = 0.0;\n\tfloat amplitude = 0.7;\n\n\tfor (int i = 0; i < octaves; i++) {\n\t\tn += amplitude * perlin(pos*frq, seed);\n\t\tfrq *= 2.0; // lacunarity = 2.0\n\t\tamplitude *= n; // gain = 0.5\n\t}\n\n\tn = pow(n, 2.0);\n\n\treturn n;\n}\n\nvoid main() {\n\tfloat x = vUv.x;\n\tfloat y = 1.0 - vUv.y;\n\tvec3 sphericalCoord = getSphericalCoord(index, x*resolution, y*resolution, resolution);\n\n\t/////////////////\n\tfloat sub1 = baseNoise(sphericalCoord, 0.5, seed);\n\tfloat sub1b = billowNoise(sphericalCoord, 1.0, seed+93.386);\n\tfloat n1 = baseNoise(sphericalCoord + vec3(sub1*0.3), 0.5, seed+38.378);\n\n\tfloat sub2 = baseNoise(sphericalCoord, 0.5, seed+12.412);\n\tfloat n2 = baseNoise(sphericalCoord + vec3(sub2*0.3), 0.5+sub1b, seed+58.578);\n\n\tn1 = 1.0-n1;\n\tn1 *= 0.1;\n\tn1 = 1.0-n1;\n\n\tn2 = 1.0-n2;\n\tn2 = pow(n2, 5.0);\n\tn2 *= 0.3;\n\tn2 = 1.0-n2;\n\tn2 = pow(n2, 5.0);\n\n\tgl_FragColor = vec4(vec3(n1), n2);\n\t///////////////////\n\n\n\t// float sub1 = perlinNoise(sphericalCoord, 1.0, seed);\n\t// float n1 = billowNoise(sphericalCoord + vec3(sub1*0.1), 0.5, seed+38.378);\n  //\n\t// gl_FragColor = vec4(vec3(n1), n1);\n\n\n}\n'},function(e,t){e.exports="#define GLSLIFY 1\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_1_0(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289_1_0(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute_1_1(vec3 x) {\n  return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nfloat snoise_1_2(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289_1_0(i); // Avoid truncation effects in permutation\n  vec3 p = permute_1_1( permute_1_1( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\n\n\nvoid main() {\n\n  float brightness = snoise_1_2(gl_FragCoord.xx);\n\n    gl_FragColor = vec4(vec3(brightness), 1.0);\n    //gl_FragColor = vec4(vec3(1.,1.,0.), 1.0);\n\n}\n"},function(e,t){e.exports="#define GLSLIFY 1\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}\n"},function(e,t){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_1_0(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289_1_0(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_1_1(vec4 x)\n{\n  return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt_1_2(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade_1_3(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise_1_4(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289_1_0(Pi0);\n  Pi1 = mod289_1_0(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\n  vec4 ixy0 = permute_1_1(ixy + iz0);\n  vec4 ixy1 = permute_1_1(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade_1_3(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\n\n\n\nvarying vec2 vUv;\nuniform int index;\nuniform float seed;\nuniform float resolution;\nuniform float res1;\nuniform float res2;\nuniform float resMix;\nuniform float mixScale;\nuniform float doesRidged;\nconst int octaves = 16;\n\n// #define M_PI 3.1415926535897932384626433832795;\n\n\nvec3 getSphericalCoord(int index, float x, float y, float width) {\n\twidth /= 2.0;\n\tx -= width;\n\ty -= width;\n\tvec3 coord = vec3(0.0, 0.0, 0.0);\n\n\tif (index == 0) {coord.x=width; coord.y=-y; coord.z=-x;}\n\telse if (index == 1) {coord.x=-width; coord.y=-y; coord.z=x;}\n\telse if (index == 2) {coord.x=x; coord.y=width; coord.z=y;}\n\telse if (index == 3) {coord.x=x; coord.y=-width; coord.z=-y;}\n\telse if (index == 4) {coord.x=x; coord.y=-y; coord.z=width;}\n\telse if (index == 5) {coord.x=-x; coord.y=-y; coord.z=-width;}\n\n\treturn normalize(coord);\n}\n\nfloat simplexRidged(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec3(pos + seed));\n\tn = (n + 1.0) * 0.5;\n\tn = 2.0 * (0.5 - abs(0.5 - n));\n\treturn n;\n}\n\nfloat simplex(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec3(pos + seed));\n\treturn (n + 1.0) * 0.5;\n}\n\nfloat baseNoise(vec3 pos, float frq, float seed ) {\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplex(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\t// increase contrast\n\tn = ( (n - 0.5) * 2.0 ) + 0.5;\n\n\treturn n;\n}\n\nfloat ridgedNoise(vec3 pos, float frq, float seed) {\n\tfloat amp = 0.5;\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\tn = pow(n, 4.0);\n\treturn n;\n}\n\nfloat invRidgedNoise(vec3 pos, float frq, float seed) {\n\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\tn = pow(n, 4.0);\n\tn = 1.0 - n;\n\n\treturn n;\n}\n\nfloat cloud(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec3(pos + seed));\n\t// n = sin(n*4.0 * cos(n*2.0));\n\tn = sin(n*5.0);\n\t// n = abs(sin(n*5.0));\n\t// n = 1.0 - n;\n\n\tn = n*0.5 + 0.5;\n\t// n = 1.0-n;\n\t// n = n*1.2;\n\t// n = 1.0-n;\n\n\treturn n;\n}\n\nfloat cloudNoise(vec3 pos, float frq, float seed) {\n\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  cloud(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\t// n = pow(n, 5.0);\n\n\tn = 1.0-n;\n\tn = pow(n, 1.0);\n\tn = 1.0-n;\n\n\treturn n;\n}\n\nvoid main() {\n\tfloat x = vUv.x;\n\tfloat y = 1.0 - vUv.y;\n\tvec3 sphericalCoord = getSphericalCoord(index, x*resolution, y*resolution, resolution);\n\n\tfloat sub1, sub2, sub3, n;\n\n\tfloat resMod = 1.0; // overall res magnification\n\tfloat resMod2 = mixScale; // minimum res mod\n\n\tif (doesRidged == 0.0) {\n\t\tsub1 = cloudNoise(sphericalCoord, res1*resMod, seed+11.437);\n\t\tsub2 = cloudNoise(sphericalCoord, res2*resMod, seed+93.483);\n\t\tsub3 = cloudNoise(sphericalCoord, resMix*resMod, seed+23.675);\n\t\tn = cloudNoise(sphericalCoord + vec3((sub1/sub3)*0.1), resMod2+sub2, seed+78.236);\n\t}\n\telse if (doesRidged == 1.0) {\n\t\tsub1 = ridgedNoise(sphericalCoord, res1*resMod, seed+83.706);\n\t\tsub2 = ridgedNoise(sphericalCoord, res2*resMod, seed+29.358);\n\t\tsub3 = ridgedNoise(sphericalCoord, resMix*resMod, seed+53.041);\n\t\tn = ridgedNoise(sphericalCoord + vec3((sub1/sub3)*0.1), resMod2+sub2, seed+34.982);\n\t}\n\telse  if (doesRidged == 2.0) {\n\t\tsub1 = invRidgedNoise(sphericalCoord, res1*resMod, seed+49.684);\n\t\tsub2 = invRidgedNoise(sphericalCoord, res2*resMod, seed+136.276);\n\t\tsub3 = invRidgedNoise(sphericalCoord, resMix*resMod, seed+3.587);\n\t\tn = invRidgedNoise(sphericalCoord + vec3((sub1/sub3)*0.1), resMod2+sub2, seed+33.321);\n\t}\n\telse {\n\t\tsub1 = baseNoise(sphericalCoord, res1*resMod, seed+52.284);\n\t\tsub2 = baseNoise(sphericalCoord, res2*resMod, seed+137.863);\n\t\tsub3 = baseNoise(sphericalCoord, resMix*resMod, seed+37.241);\n\t\tfloat alpha = sub1*3.14*2.0;\n\t\tfloat beta = sub2*3.14*2.0;\n\t\tfloat fx = cos(alpha)*cos(beta);\n\t\tfloat fz = sin(alpha)*cos(beta);\n\t\tfloat fy = sin(beta);\n\t\tn = baseNoise(sphericalCoord + (vec3(fx,fy,fz) * sub3), 1.0, seed+28.634);\n\t}\n\n\tgl_FragColor = vec4(vec3(n), 1.0);\n\n\n}\n'},function(e,t){e.exports="#define GLSLIFY 1\nuniform vec3 glowColor;\nvarying float intensity;\n\nvoid main()\n{\n\tvec3 glow = glowColor * intensity;\n    gl_FragColor = vec4( glow, 1.0 );\n}\n"},function(e,t){e.exports="#define GLSLIFY 1\nuniform vec3 viewVector;\nuniform float c;\nuniform float p;\nvarying float intensity;\n\nvoid main()\n{\n  vec3 vNormal = normalize( normalMatrix * normal );\n\tvec3 vNormel = normalize( normalMatrix * viewVector );\n\tintensity = pow( c - dot(vNormal, vNormel), p );\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n"},function(e,t){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_1_0(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289_1_0(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_1_1(vec4 x)\n{\n  return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt_1_2(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade_1_3(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise_1_4(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289_1_0(Pi0);\n  Pi1 = mod289_1_0(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\n  vec4 ixy0 = permute_1_1(ixy + iz0);\n  vec4 ixy1 = permute_1_1(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade_1_3(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\n\n\n// Permutation polynomial: (34x^2 + x) mod 289\nvec3 permute_2_5(vec3 x) {\n  return mod((34.0 * x + 1.0) * x, 289.0);\n}\n\nvec3 dist_2_6(vec3 x, vec3 y, vec3 z,  bool manhattanDistance) {\n  return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\n}\n\nvec2 worley_2_7(vec3 P, float jitter, bool manhattanDistance) {\nfloat K = 0.142857142857; // 1/7\nfloat Ko = 0.428571428571; // 1/2-K/2\nfloat  K2 = 0.020408163265306; // 1/(7*7)\nfloat Kz = 0.166666666667; // 1/6\nfloat Kzo = 0.416666666667; // 1/2-1/6*2\n\n\tvec3 Pi = mod(floor(P), 289.0);\n \tvec3 Pf = fract(P) - 0.5;\n\n\tvec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\n\n\tvec3 p = permute_2_5(Pi.x + vec3(-1.0, 0.0, 1.0));\n\tvec3 p1 = permute_2_5(p + Pi.y - 1.0);\n\tvec3 p2 = permute_2_5(p + Pi.y);\n\tvec3 p3 = permute_2_5(p + Pi.y + 1.0);\n\n\tvec3 p11 = permute_2_5(p1 + Pi.z - 1.0);\n\tvec3 p12 = permute_2_5(p1 + Pi.z);\n\tvec3 p13 = permute_2_5(p1 + Pi.z + 1.0);\n\n\tvec3 p21 = permute_2_5(p2 + Pi.z - 1.0);\n\tvec3 p22 = permute_2_5(p2 + Pi.z);\n\tvec3 p23 = permute_2_5(p2 + Pi.z + 1.0);\n\n\tvec3 p31 = permute_2_5(p3 + Pi.z - 1.0);\n\tvec3 p32 = permute_2_5(p3 + Pi.z);\n\tvec3 p33 = permute_2_5(p3 + Pi.z + 1.0);\n\n\tvec3 ox11 = fract(p11*K) - Ko;\n\tvec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\n\tvec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\n\n\tvec3 ox12 = fract(p12*K) - Ko;\n\tvec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\n\tvec3 oz12 = floor(p12*K2)*Kz - Kzo;\n\n\tvec3 ox13 = fract(p13*K) - Ko;\n\tvec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\n\tvec3 oz13 = floor(p13*K2)*Kz - Kzo;\n\n\tvec3 ox21 = fract(p21*K) - Ko;\n\tvec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\n\tvec3 oz21 = floor(p21*K2)*Kz - Kzo;\n\n\tvec3 ox22 = fract(p22*K) - Ko;\n\tvec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\n\tvec3 oz22 = floor(p22*K2)*Kz - Kzo;\n\n\tvec3 ox23 = fract(p23*K) - Ko;\n\tvec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\n\tvec3 oz23 = floor(p23*K2)*Kz - Kzo;\n\n\tvec3 ox31 = fract(p31*K) - Ko;\n\tvec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\n\tvec3 oz31 = floor(p31*K2)*Kz - Kzo;\n\n\tvec3 ox32 = fract(p32*K) - Ko;\n\tvec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\n\tvec3 oz32 = floor(p32*K2)*Kz - Kzo;\n\n\tvec3 ox33 = fract(p33*K) - Ko;\n\tvec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\n\tvec3 oz33 = floor(p33*K2)*Kz - Kzo;\n\n\tvec3 dx11 = Pfx + jitter*ox11;\n\tvec3 dy11 = Pfy.x + jitter*oy11;\n\tvec3 dz11 = Pfz.x + jitter*oz11;\n\n\tvec3 dx12 = Pfx + jitter*ox12;\n\tvec3 dy12 = Pfy.x + jitter*oy12;\n\tvec3 dz12 = Pfz.y + jitter*oz12;\n\n\tvec3 dx13 = Pfx + jitter*ox13;\n\tvec3 dy13 = Pfy.x + jitter*oy13;\n\tvec3 dz13 = Pfz.z + jitter*oz13;\n\n\tvec3 dx21 = Pfx + jitter*ox21;\n\tvec3 dy21 = Pfy.y + jitter*oy21;\n\tvec3 dz21 = Pfz.x + jitter*oz21;\n\n\tvec3 dx22 = Pfx + jitter*ox22;\n\tvec3 dy22 = Pfy.y + jitter*oy22;\n\tvec3 dz22 = Pfz.y + jitter*oz22;\n\n\tvec3 dx23 = Pfx + jitter*ox23;\n\tvec3 dy23 = Pfy.y + jitter*oy23;\n\tvec3 dz23 = Pfz.z + jitter*oz23;\n\n\tvec3 dx31 = Pfx + jitter*ox31;\n\tvec3 dy31 = Pfy.z + jitter*oy31;\n\tvec3 dz31 = Pfz.x + jitter*oz31;\n\n\tvec3 dx32 = Pfx + jitter*ox32;\n\tvec3 dy32 = Pfy.z + jitter*oy32;\n\tvec3 dz32 = Pfz.y + jitter*oz32;\n\n\tvec3 dx33 = Pfx + jitter*ox33;\n\tvec3 dy33 = Pfy.z + jitter*oy33;\n\tvec3 dz33 = Pfz.z + jitter*oz33;\n\n\tvec3 d11 = dist_2_6(dx11, dy11, dz11, manhattanDistance);\n\tvec3 d12 =dist_2_6(dx12, dy12, dz12, manhattanDistance);\n\tvec3 d13 = dist_2_6(dx13, dy13, dz13, manhattanDistance);\n\tvec3 d21 = dist_2_6(dx21, dy21, dz21, manhattanDistance);\n\tvec3 d22 = dist_2_6(dx22, dy22, dz22, manhattanDistance);\n\tvec3 d23 = dist_2_6(dx23, dy23, dz23, manhattanDistance);\n\tvec3 d31 = dist_2_6(dx31, dy31, dz31, manhattanDistance);\n\tvec3 d32 = dist_2_6(dx32, dy32, dz32, manhattanDistance);\n\tvec3 d33 = dist_2_6(dx33, dy33, dz33, manhattanDistance);\n\n\tvec3 d1a = min(d11, d12);\n\td12 = max(d11, d12);\n\td11 = min(d1a, d13); // Smallest now not in d12 or d13\n\td13 = max(d1a, d13);\n\td12 = min(d12, d13); // 2nd smallest now not in d13\n\tvec3 d2a = min(d21, d22);\n\td22 = max(d21, d22);\n\td21 = min(d2a, d23); // Smallest now not in d22 or d23\n\td23 = max(d2a, d23);\n\td22 = min(d22, d23); // 2nd smallest now not in d23\n\tvec3 d3a = min(d31, d32);\n\td32 = max(d31, d32);\n\td31 = min(d3a, d33); // Smallest now not in d32 or d33\n\td33 = max(d3a, d33);\n\td32 = min(d32, d33); // 2nd smallest now not in d33\n\tvec3 da = min(d11, d21);\n\td21 = max(d11, d21);\n\td11 = min(da, d31); // Smallest now in d11\n\td31 = max(da, d31); // 2nd smallest now not in d31\n\td11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\n\td11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\n\td12 = min(d12, d21); // 2nd smallest now not in d21\n\td12 = min(d12, d22); // nor in d22\n\td12 = min(d12, d31); // nor in d31\n\td12 = min(d12, d32); // nor in d32\n\td11.yz = min(d11.yz,d12.xy); // nor in d12.yz\n\td11.y = min(d11.y,d12.z); // Only two more to go\n\td11.y = min(d11.y,d11.z); // Done! (Phew!)\n\treturn sqrt(d11.xy); // F1, F2\n\n}\n\n\n\nvarying vec2 vUv;\nuniform int index;\nuniform float seed;\nuniform float resolution;\nuniform float res1;\nuniform float res2;\nuniform float resMix;\nuniform float mixScale;\nuniform sampler2D nebulaeMap;\nconst int octaves = 16;\n\n\n\nvec3 getSphericalCoord(int index, float x, float y, float width) {\n\twidth /= 2.0;\n\tx -= width;\n\ty -= width;\n\tvec3 coord = vec3(0.0, 0.0, 0.0);\n\n\tif (index == 0) {coord.x=width; coord.y=-y; coord.z=-x;}\n\telse if (index == 1) {coord.x=-width; coord.y=-y; coord.z=x;}\n\telse if (index == 2) {coord.x=x; coord.y=width; coord.z=y;}\n\telse if (index == 3) {coord.x=x; coord.y=-width; coord.z=-y;}\n\telse if (index == 4) {coord.x=x; coord.y=-y; coord.z=width;}\n\telse if (index == 5) {coord.x=-x; coord.y=-y; coord.z=-width;}\n\n\treturn normalize(coord);\n}\n\n// float simplexRidged(vec3 pos, float seed) {\n// \tfloat n = noise(vec4(pos, seed));\n// \tn = (n + 1.0) * 0.5;\n// \tn = 2.0 * (0.5 - abs(0.5 - n));\n// \treturn n;\n// }\n\nfloat simplexRidged(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec3(pos + seed));\n\t// n = (n + 1.0) * 0.5;\n\t// n = 2.0 * (0.5 - abs(0.5 - n));\n\tn = abs(n);\n\treturn n;\n}\n\nfloat simplex(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec3(pos + seed));\n\t// return (n + 1.0) * 0.5;\n\tn = (n + 1.0) * 0.5;\n\t// n = 2.0 * (0.5 - abs(0.5 - n));\n\treturn n;\n}\n\nfloat baseNoise(vec3 pos, float frq, float seed ) {\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplex(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\n\t// n = fract(n*10.0);\n\n\n\n\n\t// n *= abs(sin(pos.y*10.0));\n\n\t// n += 0.4;\n\n\t// increase contrast\n\tn = ( (n - 0.5) * 3.0 ) + 0.6;\n\n\t// n = pow(n, 3.0);\n\n\t// n = pow( (1.0-n), 2.0);\n\n\n\t// n = pow(n, 2.0);\n\n\n\t// n = 1.0-n;\n\t// n = pow(n, 6.0);\n\t// n = 1.0-n;\n\n\treturn n;\n}\n\nfloat ridgedNoise(vec3 pos, float frq, float seed) {\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplexRidged(vec3(pos.x*gain/frq, 2.0*pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\t// n = pow(n, 5.0);\n\n\t// n = 1.0-n;\n\t// n = pow(n, 2.0);\n\t// n = 1.0-n;\n\n\treturn n;\n}\n\nfloat invRidgedNoise(vec3 pos, float frq, float seed) {\n\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplexRidged(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n  n = 1.0 - n;\n\tn = pow(n, 2.0);\n  n = 1.0 - n;\n\n\n\treturn n;\n}\n\nfloat cloud(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec3(pos + seed));\n\t// n = sin(n*4.0 * cos(n*2.0));\n\tn = sin(n*7.0);\n\n\tn = n*0.5 + 0.5;\n\t// n = 1.0-n;\n\t// n = n*1.2;\n\t// n = 1.0-n;\n\n\treturn n;\n}\n\nfloat cloudNoise(vec3 pos, float frq, float seed) {\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  cloud(vec3(pos.x*gain/frq, 1.0*pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n\t// n = pow(n, 5.0);\n\n\tn = 1.0-n;\n\tn = pow(n, 1.0);\n\tn = 1.0-n;\n\n\treturn n;\n}\n\nfloat star(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec3(pos + seed));\n\n\tn = abs(n);\n\n\t// n = n*0.5 + 0.5;\n\n\t// n = pow(n, 2.0);\n\n\t// n = 1.0-n;\n\t// n = n*1.2;\n\t// n = 1.0-n;\n\n\treturn n;\n}\n\nfloat rand(vec3 co, float seed) {\n   return fract(sin(dot(co.xyz,vec3(12.9898,78.233,34.830))) * (43758.5453+seed)/resolution);\n}\n\nfloat starNoise(vec3 pos, float seed) {\n\n\tfloat n = rand(pos.xyz*100.0, seed);\n\n\t// n = pow(n, 2.0);\n\n\t// if (n < 0.99) {\n\t// \tn = 0.0;\n\t// }\n\n\treturn n;\n}\n\n\n\nvoid main() {\n\tfloat x = vUv.x;\n\tfloat y = 1.0 - vUv.y;\n\tvec3 sphericalCoord = getSphericalCoord(index, x*resolution, y*resolution, resolution);\n\n\n  // create nebula\n\n\tfloat c1 = cloudNoise(sphericalCoord, res1, seed);\n\tfloat c2 = cloudNoise(sphericalCoord + vec3(c1*res2*0.2), res2, seed+310.4);\n\t// c2 = pow(c2, 5.0) * 1.0;\n  float c3 = cloudNoise(sphericalCoord, resMix, seed + 661.384);\n\n  float nebulaStrength = 2.0 * pow(c2, 3.0);\n  // float nebulaStrength = 1.0;\n\tvec3 nColor = texture2D(nebulaeMap, vec2(c3, c1)).rgb * nebulaStrength;\n\t// float c4 = cloudNoise(sphericalCoord, resMix, seed + 61.684);\n\t// c4 = pow(c4, 3.0) * 1.0;\n\t// nColor = mix(nColor, nColor*0.3, c4*1.0);\n  vec4 nebula = vec4(nColor, 1.0);\n\n\n\t// add in large stars to nebula\n  float sub1 = baseNoise(sphericalCoord, 0.003, seed+322.284);\n\tvec2 F = worley_2_7((sphericalCoord * 150.0) + vec3(seed+35.890), 1.0, true);\n\tfloat F1 = F.x;\n\tfloat n2 = F1;\n\tn2 = 1.0 - n2;\n\tn2 *= 1.2;\n\tn2 = pow(n2, 7.0);\n\tn2 *= c2;\n  n2 *= sub1;\n\tnebula += vec4(vec3(n2), 1.0);\n\n\n\n  float c4 = invRidgedNoise(sphericalCoord, 1.0, seed+38.476);\n\n\n  // c4 = ((c4 - 0.5) * 1.5) + 0.5;\n  // nebula.rgb += c4*0.3;\n  nebula.a = pow( c2, 1.0);\n  // nebula.rgb = ((nebula.rgb - 0.5) * (1.0+c2*1.0)) + 0.5;\n\n\n\n\n\n\n\n\tgl_FragColor = nebula;\n}\n'},function(e,t){e.exports="#define GLSLIFY 1\nvarying vec3 vNormal;\nvarying vec3 vPosition;\nvarying vec3 cameraVector;\n\nuniform float time;\n\nvoid main() {\n  // gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n\n  // vPosition = normalize(position) * scale;\n  vPosition = position;\n  vNormal = normal;\n  cameraVector = cameraPosition - vPosition;\n\n\t// vec3 newPosition = position + normal * amplitude * displacement;\n\tvec3 newPosition = position;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n}\n"},function(e,t){e.exports='#define GLSLIFY 1\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289_1_0(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289_1_0(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute_1_1(vec4 x)\n{\n  return mod289_1_0(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt_1_2(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade_1_3(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise_1_4(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289_1_0(Pi0);\n  Pi1 = mod289_1_0(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute_1_1(permute_1_1(ix) + iy);\n  vec4 ixy0 = permute_1_1(ixy + iz0);\n  vec4 ixy1 = permute_1_1(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt_1_2(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt_1_2(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade_1_3(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\n\n\n// Permutation polynomial: (34x^2 + x) mod 289\nvec3 permute_2_5(vec3 x) {\n  return mod((34.0 * x + 1.0) * x, 289.0);\n}\n\nvec3 dist_2_6(vec3 x, vec3 y, vec3 z,  bool manhattanDistance) {\n  return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\n}\n\nvec2 worley_2_7(vec3 P, float jitter, bool manhattanDistance) {\nfloat K = 0.142857142857; // 1/7\nfloat Ko = 0.428571428571; // 1/2-K/2\nfloat  K2 = 0.020408163265306; // 1/(7*7)\nfloat Kz = 0.166666666667; // 1/6\nfloat Kzo = 0.416666666667; // 1/2-1/6*2\n\n\tvec3 Pi = mod(floor(P), 289.0);\n \tvec3 Pf = fract(P) - 0.5;\n\n\tvec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\n\tvec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\n\n\tvec3 p = permute_2_5(Pi.x + vec3(-1.0, 0.0, 1.0));\n\tvec3 p1 = permute_2_5(p + Pi.y - 1.0);\n\tvec3 p2 = permute_2_5(p + Pi.y);\n\tvec3 p3 = permute_2_5(p + Pi.y + 1.0);\n\n\tvec3 p11 = permute_2_5(p1 + Pi.z - 1.0);\n\tvec3 p12 = permute_2_5(p1 + Pi.z);\n\tvec3 p13 = permute_2_5(p1 + Pi.z + 1.0);\n\n\tvec3 p21 = permute_2_5(p2 + Pi.z - 1.0);\n\tvec3 p22 = permute_2_5(p2 + Pi.z);\n\tvec3 p23 = permute_2_5(p2 + Pi.z + 1.0);\n\n\tvec3 p31 = permute_2_5(p3 + Pi.z - 1.0);\n\tvec3 p32 = permute_2_5(p3 + Pi.z);\n\tvec3 p33 = permute_2_5(p3 + Pi.z + 1.0);\n\n\tvec3 ox11 = fract(p11*K) - Ko;\n\tvec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\n\tvec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\n\n\tvec3 ox12 = fract(p12*K) - Ko;\n\tvec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\n\tvec3 oz12 = floor(p12*K2)*Kz - Kzo;\n\n\tvec3 ox13 = fract(p13*K) - Ko;\n\tvec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\n\tvec3 oz13 = floor(p13*K2)*Kz - Kzo;\n\n\tvec3 ox21 = fract(p21*K) - Ko;\n\tvec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\n\tvec3 oz21 = floor(p21*K2)*Kz - Kzo;\n\n\tvec3 ox22 = fract(p22*K) - Ko;\n\tvec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\n\tvec3 oz22 = floor(p22*K2)*Kz - Kzo;\n\n\tvec3 ox23 = fract(p23*K) - Ko;\n\tvec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\n\tvec3 oz23 = floor(p23*K2)*Kz - Kzo;\n\n\tvec3 ox31 = fract(p31*K) - Ko;\n\tvec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\n\tvec3 oz31 = floor(p31*K2)*Kz - Kzo;\n\n\tvec3 ox32 = fract(p32*K) - Ko;\n\tvec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\n\tvec3 oz32 = floor(p32*K2)*Kz - Kzo;\n\n\tvec3 ox33 = fract(p33*K) - Ko;\n\tvec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\n\tvec3 oz33 = floor(p33*K2)*Kz - Kzo;\n\n\tvec3 dx11 = Pfx + jitter*ox11;\n\tvec3 dy11 = Pfy.x + jitter*oy11;\n\tvec3 dz11 = Pfz.x + jitter*oz11;\n\n\tvec3 dx12 = Pfx + jitter*ox12;\n\tvec3 dy12 = Pfy.x + jitter*oy12;\n\tvec3 dz12 = Pfz.y + jitter*oz12;\n\n\tvec3 dx13 = Pfx + jitter*ox13;\n\tvec3 dy13 = Pfy.x + jitter*oy13;\n\tvec3 dz13 = Pfz.z + jitter*oz13;\n\n\tvec3 dx21 = Pfx + jitter*ox21;\n\tvec3 dy21 = Pfy.y + jitter*oy21;\n\tvec3 dz21 = Pfz.x + jitter*oz21;\n\n\tvec3 dx22 = Pfx + jitter*ox22;\n\tvec3 dy22 = Pfy.y + jitter*oy22;\n\tvec3 dz22 = Pfz.y + jitter*oz22;\n\n\tvec3 dx23 = Pfx + jitter*ox23;\n\tvec3 dy23 = Pfy.y + jitter*oy23;\n\tvec3 dz23 = Pfz.z + jitter*oz23;\n\n\tvec3 dx31 = Pfx + jitter*ox31;\n\tvec3 dy31 = Pfy.z + jitter*oy31;\n\tvec3 dz31 = Pfz.x + jitter*oz31;\n\n\tvec3 dx32 = Pfx + jitter*ox32;\n\tvec3 dy32 = Pfy.z + jitter*oy32;\n\tvec3 dz32 = Pfz.y + jitter*oz32;\n\n\tvec3 dx33 = Pfx + jitter*ox33;\n\tvec3 dy33 = Pfy.z + jitter*oy33;\n\tvec3 dz33 = Pfz.z + jitter*oz33;\n\n\tvec3 d11 = dist_2_6(dx11, dy11, dz11, manhattanDistance);\n\tvec3 d12 =dist_2_6(dx12, dy12, dz12, manhattanDistance);\n\tvec3 d13 = dist_2_6(dx13, dy13, dz13, manhattanDistance);\n\tvec3 d21 = dist_2_6(dx21, dy21, dz21, manhattanDistance);\n\tvec3 d22 = dist_2_6(dx22, dy22, dz22, manhattanDistance);\n\tvec3 d23 = dist_2_6(dx23, dy23, dz23, manhattanDistance);\n\tvec3 d31 = dist_2_6(dx31, dy31, dz31, manhattanDistance);\n\tvec3 d32 = dist_2_6(dx32, dy32, dz32, manhattanDistance);\n\tvec3 d33 = dist_2_6(dx33, dy33, dz33, manhattanDistance);\n\n\tvec3 d1a = min(d11, d12);\n\td12 = max(d11, d12);\n\td11 = min(d1a, d13); // Smallest now not in d12 or d13\n\td13 = max(d1a, d13);\n\td12 = min(d12, d13); // 2nd smallest now not in d13\n\tvec3 d2a = min(d21, d22);\n\td22 = max(d21, d22);\n\td21 = min(d2a, d23); // Smallest now not in d22 or d23\n\td23 = max(d2a, d23);\n\td22 = min(d22, d23); // 2nd smallest now not in d23\n\tvec3 d3a = min(d31, d32);\n\td32 = max(d31, d32);\n\td31 = min(d3a, d33); // Smallest now not in d32 or d33\n\td33 = max(d3a, d33);\n\td32 = min(d32, d33); // 2nd smallest now not in d33\n\tvec3 da = min(d11, d21);\n\td21 = max(d11, d21);\n\td11 = min(da, d31); // Smallest now in d11\n\td31 = max(da, d31); // 2nd smallest now not in d31\n\td11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\n\td11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\n\td12 = min(d12, d21); // 2nd smallest now not in d21\n\td12 = min(d12, d22); // nor in d22\n\td12 = min(d12, d31); // nor in d31\n\td12 = min(d12, d32); // nor in d32\n\td11.yz = min(d11.yz,d12.xy); // nor in d12.yz\n\td11.y = min(d11.y,d12.z); // Only two more to go\n\td11.y = min(d11.y,d11.z); // Done! (Phew!)\n\treturn sqrt(d11.xy); // F1, F2\n\n}\n\n\n\nvarying vec2 vUv;\nuniform int index;\nuniform float seed;\nuniform float resolution;\nuniform float res1;\nuniform float res2;\nuniform float resMix;\nuniform float mixScale;\nuniform sampler2D nebulaeMap;\n\n\nvec3 getSphericalCoord(int index, float x, float y, float width) {\n\twidth /= 2.0;\n\tx -= width;\n\ty -= width;\n\tvec3 coord = vec3(0.0, 0.0, 0.0);\n\n\tif (index == 0) {coord.x=width; coord.y=-y; coord.z=-x;}\n\telse if (index == 1) {coord.x=-width; coord.y=-y; coord.z=x;}\n\telse if (index == 2) {coord.x=x; coord.y=width; coord.z=y;}\n\telse if (index == 3) {coord.x=x; coord.y=-width; coord.z=-y;}\n\telse if (index == 4) {coord.x=x; coord.y=-y; coord.z=width;}\n\telse if (index == 5) {coord.x=-x; coord.y=-y; coord.z=-width;}\n\n\treturn normalize(coord);\n}\n\n\nfloat simplex(vec3 pos, float seed) {\n\tfloat n = cnoise_1_4(vec3(pos + seed));\n\t// return (n + 1.0) * 0.5;\n\tn = (n + 1.0) * 0.5;\n\t// n = 2.0 * (0.5 - abs(0.5 - n));\n\treturn n;\n}\n\nfloat baseNoise(vec3 pos, float frq, float seed ) {\n\tconst int octaves = 16;\n\tfloat amp = 0.5;\n\n\tfloat n = 0.0;\n\tfloat gain = 1.0;\n\tfor(int i=0; i<octaves; i++) {\n\t\tn +=  simplex(vec3(pos.x*gain/frq, pos.y*gain/frq, pos.z*gain/frq), seed+float(i)*10.0) * amp/gain;\n\t\tgain *= 2.0;\n\t}\n\n  // increase contrast\n\tn = ( (n - 0.5) * 3.0 ) + 0.6;\n\treturn n;\n}\n\n\nvoid main() {\n\tfloat x = vUv.x;\n\tfloat y = 1.0 - vUv.y;\n\tvec3 sphericalCoord = getSphericalCoord(index, x*resolution, y*resolution, resolution);\n\n  // create base stars\n\tvec2 F = worley_2_7((sphericalCoord * 200.0) + vec3(seed), 1.0, true);\n  float F1 = F.x;\n  float F2 = F.y;\n\n\tfloat n = F1;\n\tn = 1.0 - n;\n\tn *= 1.2;\n\tn = pow(n, 4.0);\n\n\n\tfloat sub1 = baseNoise(sphericalCoord, 0.003, seed+32.284);\n\tn *= sub1;\n\tvec3 starsColor = vec3(n);\n\n\n  // float n;\n  // float res = 200.0;\n  // float mag = 0.7;\n  // for (int i=0; i<4; i++) {\n  //   vec2 F = worley3D((sphericalCoord * res) + vec3(seed), 1.0, true);\n  //   float F1 = F.x;\n  //   float F2 = F.y;\n  //   n += pow(F1, 1.0) * mag;\n  //   res *= 3.0;\n  //   mag *= 0.5;\n  // }\n  // n = 1.0-n;\n  // n = pow(n, 3.0);\n  // vec3 starsColor = vec3(n);\n\n\n\tgl_FragColor = vec4(starsColor, 1.0);\n}\n'},,function(e,t){},function(e,t){},function(e,t){},function(e,t){}],[89]);